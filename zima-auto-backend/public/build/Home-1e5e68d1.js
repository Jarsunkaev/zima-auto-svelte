
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, o as onMount, e as element, a as space, t as text, b as svg_element, c as attr_dev, f as add_location, g as set_style, h as insert_dev, j as append_dev, l as listen_dev, k as is_function, m as set_data_dev, n as noop, p as detach_dev, r as run_all, q as src_url_equal, u as validate_each_argument, w as validate_store, x as component_subscribe, y as currentLang, z as t, A as transition_in, B as group_outros, C as check_outros, D as transition_out, E as destroy_each, F as binding_callbacks, G as create_component, H as mount_component, I as destroy_component } from './main-00d1c1b7.js';
import { g as gsapWithCSS } from './index-171583ae.js';
import { S as ScrollTrigger } from './ScrollTrigger-d3438372.js';

/* src/components/ServiceCard.svelte generated by Svelte v3.59.2 */
const file$2 = "src/components/ServiceCard.svelte";

function create_fragment$2(ctx) {
	let div4;
	let div0;
	let t0;
	let h3;
	let t1;
	let t2;
	let p;
	let t3;
	let t4;
	let div1;
	let t5;
	let div2;
	let t6;
	let div3;
	let span;
	let t7;
	let t8;
	let svg;
	let path;
	let div4_class_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div4 = element("div");
			div0 = element("div");
			t0 = space();
			h3 = element("h3");
			t1 = text(/*title*/ ctx[2]);
			t2 = space();
			p = element("p");
			t3 = text(/*description*/ ctx[3]);
			t4 = space();
			div1 = element("div");
			t5 = space();
			div2 = element("div");
			t6 = space();
			div3 = element("div");
			span = element("span");
			t7 = text(/*ctaText*/ ctx[5]);
			t8 = space();
			svg = svg_element("svg");
			path = svg_element("path");
			attr_dev(div0, "class", "service-icon svelte-1svjhww");
			add_location(div0, file$2, 39, 2, 810);
			attr_dev(h3, "class", "svelte-1svjhww");
			add_location(h3, file$2, 43, 2, 871);
			attr_dev(p, "class", "svelte-1svjhww");
			add_location(p, file$2, 44, 2, 890);
			attr_dev(div1, "class", "service-overlay svelte-1svjhww");
			set_style(div1, "background-image", "url('" + /*image*/ ctx[1] + "')");
			add_location(div1, file$2, 46, 2, 916);
			attr_dev(div2, "class", "gradient-overlay svelte-1svjhww");
			add_location(div2, file$2, 47, 2, 995);
			add_location(span, file$2, 50, 4, 1168);
			attr_dev(path, "d", "M5 12H19M19 12L12 5M19 12L12 19");
			attr_dev(path, "stroke", "currentColor");
			attr_dev(path, "stroke-width", "2");
			attr_dev(path, "stroke-linecap", "round");
			attr_dev(path, "stroke-linejoin", "round");
			add_location(path, file$2, 52, 6, 1297);
			attr_dev(svg, "width", "16");
			attr_dev(svg, "height", "16");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg, file$2, 51, 4, 1195);
			attr_dev(div3, "class", "card-action svelte-1svjhww");
			attr_dev(div3, "tabindex", "0");
			attr_dev(div3, "role", "button");
			add_location(div3, file$2, 49, 2, 1037);
			attr_dev(div4, "class", div4_class_value = "service-card " + (/*isVisible*/ ctx[7] ? 'visible' : '') + " " + (/*isHovered*/ ctx[8] ? 'hovered' : '') + " svelte-1svjhww");
			set_style(div4, "transition-delay", 100 * /*index*/ ctx[4] + "ms");
			add_location(div4, file$2, 33, 0, 604);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div0);
			div0.innerHTML = /*svgIcon*/ ctx[0];
			append_dev(div4, t0);
			append_dev(div4, h3);
			append_dev(h3, t1);
			append_dev(div4, t2);
			append_dev(div4, p);
			append_dev(p, t3);
			append_dev(div4, t4);
			append_dev(div4, div1);
			append_dev(div4, t5);
			append_dev(div4, div2);
			append_dev(div4, t6);
			append_dev(div4, div3);
			append_dev(div3, span);
			append_dev(span, t7);
			append_dev(div3, t8);
			append_dev(div3, svg);
			append_dev(svg, path);

			if (!mounted) {
				dispose = [
					listen_dev(
						div3,
						"click",
						function () {
							if (is_function(/*ctaAction*/ ctx[6])) /*ctaAction*/ ctx[6].apply(this, arguments);
						},
						false,
						false,
						false,
						false
					),
					listen_dev(div3, "keydown", /*keydown_handler*/ ctx[12], false, false, false, false),
					listen_dev(div4, "mouseenter", /*handleMouseEnter*/ ctx[9], false, false, false, false),
					listen_dev(div4, "mouseleave", /*handleMouseLeave*/ ctx[10], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;
			if (dirty & /*svgIcon*/ 1) div0.innerHTML = /*svgIcon*/ ctx[0];			if (dirty & /*title*/ 4) set_data_dev(t1, /*title*/ ctx[2]);
			if (dirty & /*description*/ 8) set_data_dev(t3, /*description*/ ctx[3]);

			if (dirty & /*image*/ 2) {
				set_style(div1, "background-image", "url('" + /*image*/ ctx[1] + "')");
			}

			if (dirty & /*ctaText*/ 32) set_data_dev(t7, /*ctaText*/ ctx[5]);

			if (dirty & /*isVisible, isHovered*/ 384 && div4_class_value !== (div4_class_value = "service-card " + (/*isVisible*/ ctx[7] ? 'visible' : '') + " " + (/*isHovered*/ ctx[8] ? 'hovered' : '') + " svelte-1svjhww")) {
				attr_dev(div4, "class", div4_class_value);
			}

			if (dirty & /*index*/ 16) {
				set_style(div4, "transition-delay", 100 * /*index*/ ctx[4] + "ms");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('ServiceCard', slots, []);
	let { svgIcon } = $$props;
	let { image } = $$props;
	let { title } = $$props;
	let { description } = $$props;
	let { index = 0 } = $$props;
	let { shouldAnimate = false } = $$props;
	let { ctaText = 'Learn more' } = $$props;

	let { ctaAction = () => {
		
	} } = $$props;

	let isVisible = false;
	let isHovered = false;

	function handleMouseEnter() {
		$$invalidate(8, isHovered = true);
	}

	function handleMouseLeave() {
		$$invalidate(8, isHovered = false);
	}

	$$self.$$.on_mount.push(function () {
		if (svgIcon === undefined && !('svgIcon' in $$props || $$self.$$.bound[$$self.$$.props['svgIcon']])) {
			console.warn("<ServiceCard> was created without expected prop 'svgIcon'");
		}

		if (image === undefined && !('image' in $$props || $$self.$$.bound[$$self.$$.props['image']])) {
			console.warn("<ServiceCard> was created without expected prop 'image'");
		}

		if (title === undefined && !('title' in $$props || $$self.$$.bound[$$self.$$.props['title']])) {
			console.warn("<ServiceCard> was created without expected prop 'title'");
		}

		if (description === undefined && !('description' in $$props || $$self.$$.bound[$$self.$$.props['description']])) {
			console.warn("<ServiceCard> was created without expected prop 'description'");
		}
	});

	const writable_props = [
		'svgIcon',
		'image',
		'title',
		'description',
		'index',
		'shouldAnimate',
		'ctaText',
		'ctaAction'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ServiceCard> was created with unknown prop '${key}'`);
	});

	const keydown_handler = e => e.key === 'Enter' && ctaAction();

	$$self.$$set = $$props => {
		if ('svgIcon' in $$props) $$invalidate(0, svgIcon = $$props.svgIcon);
		if ('image' in $$props) $$invalidate(1, image = $$props.image);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('description' in $$props) $$invalidate(3, description = $$props.description);
		if ('index' in $$props) $$invalidate(4, index = $$props.index);
		if ('shouldAnimate' in $$props) $$invalidate(11, shouldAnimate = $$props.shouldAnimate);
		if ('ctaText' in $$props) $$invalidate(5, ctaText = $$props.ctaText);
		if ('ctaAction' in $$props) $$invalidate(6, ctaAction = $$props.ctaAction);
	};

	$$self.$capture_state = () => ({
		svgIcon,
		image,
		title,
		description,
		index,
		shouldAnimate,
		ctaText,
		ctaAction,
		onMount,
		isVisible,
		isHovered,
		handleMouseEnter,
		handleMouseLeave
	});

	$$self.$inject_state = $$props => {
		if ('svgIcon' in $$props) $$invalidate(0, svgIcon = $$props.svgIcon);
		if ('image' in $$props) $$invalidate(1, image = $$props.image);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('description' in $$props) $$invalidate(3, description = $$props.description);
		if ('index' in $$props) $$invalidate(4, index = $$props.index);
		if ('shouldAnimate' in $$props) $$invalidate(11, shouldAnimate = $$props.shouldAnimate);
		if ('ctaText' in $$props) $$invalidate(5, ctaText = $$props.ctaText);
		if ('ctaAction' in $$props) $$invalidate(6, ctaAction = $$props.ctaAction);
		if ('isVisible' in $$props) $$invalidate(7, isVisible = $$props.isVisible);
		if ('isHovered' in $$props) $$invalidate(8, isHovered = $$props.isHovered);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*shouldAnimate, index*/ 2064) {
			if (shouldAnimate) {
				// Add a staggered delay based on the index
				setTimeout(
					() => {
						$$invalidate(7, isVisible = true);
					},
					150 * index
				);
			}
		}
	};

	return [
		svgIcon,
		image,
		title,
		description,
		index,
		ctaText,
		ctaAction,
		isVisible,
		isHovered,
		handleMouseEnter,
		handleMouseLeave,
		shouldAnimate,
		keydown_handler
	];
}

class ServiceCard extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$2, create_fragment$2, safe_not_equal, {
			svgIcon: 0,
			image: 1,
			title: 2,
			description: 3,
			index: 4,
			shouldAnimate: 11,
			ctaText: 5,
			ctaAction: 6
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ServiceCard",
			options,
			id: create_fragment$2.name
		});
	}

	get svgIcon() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set svgIcon(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get image() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set image(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get description() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set description(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get index() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set index(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get shouldAnimate() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set shouldAnimate(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get ctaText() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set ctaText(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get ctaAction() {
		throw new Error("<ServiceCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set ctaAction(value) {
		throw new Error("<ServiceCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/TestimonialCard.svelte generated by Svelte v3.59.2 */
const file$1 = "src/components/TestimonialCard.svelte";

// (44:8) {:else}
function create_else_block(ctx) {
	let div;
	let t_value = /*name*/ ctx[0].charAt(0) + "";
	let t;

	const block = {
		c: function create() {
			div = element("div");
			t = text(t_value);
			attr_dev(div, "class", "author-initials svelte-1wtpenc");
			add_location(div, file$1, 44, 10, 1857);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*name*/ 1 && t_value !== (t_value = /*name*/ ctx[0].charAt(0) + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(44:8) {:else}",
		ctx
	});

	return block;
}

// (42:8) {#if image}
function create_if_block_1(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			if (!src_url_equal(img.src, img_src_value = /*image*/ ctx[3])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", /*name*/ ctx[0]);
			attr_dev(img, "class", "svelte-1wtpenc");
			add_location(img, file$1, 42, 10, 1800);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*image*/ 8 && !src_url_equal(img.src, img_src_value = /*image*/ ctx[3])) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*name*/ 1) {
				attr_dev(img, "alt", /*name*/ ctx[0]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(42:8) {#if image}",
		ctx
	});

	return block;
}

// (50:8) {#if location}
function create_if_block(ctx) {
	let span;
	let t;

	const block = {
		c: function create() {
			span = element("span");
			t = text(/*location*/ ctx[1]);
			attr_dev(span, "class", "svelte-1wtpenc");
			add_location(span, file$1, 50, 10, 2025);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			append_dev(span, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*location*/ 2) set_data_dev(t, /*location*/ ctx[1]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(50:8) {#if location}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let div6;
	let div0;
	let t0;
	let div1;
	let svg;
	let path;
	let t1;
	let div5;
	let p;
	let t2;
	let t3;
	let div4;
	let div2;
	let t4;
	let div3;
	let h4;
	let t5;
	let t6;
	let div6_class_value;
	let mounted;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (/*image*/ ctx[3]) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*location*/ ctx[1] && create_if_block(ctx);

	const block = {
		c: function create() {
			div6 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			svg = svg_element("svg");
			path = svg_element("path");
			t1 = space();
			div5 = element("div");
			p = element("p");
			t2 = text(/*text*/ ctx[2]);
			t3 = space();
			div4 = element("div");
			div2 = element("div");
			if_block0.c();
			t4 = space();
			div3 = element("div");
			h4 = element("h4");
			t5 = text(/*name*/ ctx[0]);
			t6 = space();
			if (if_block1) if_block1.c();
			attr_dev(div0, "class", "card-border svelte-1wtpenc");
			add_location(div0, file$1, 29, 2, 559);
			attr_dev(path, "d", "M11.928 36C8.208 36 5.184 34.704 2.856 32.112C0.952 29.52 0 26.352 0 22.608C0 16.8 2.38 11.664 7.14 7.2C11.9 2.4 17.612 0 24.276 0L26.18 6.768C21.42 7.104 17.374 8.4 14.042 10.656C10.71 12.576 8.856 15.12 8.58 18.288C9.964 17.28 11.69 16.776 13.766 16.776C16.65 16.776 19.058 17.76 20.994 19.728C22.93 21.648 23.898 24.144 23.898 27.216C23.898 30.288 22.93 32.784 20.994 34.704C19.058 35.568 15.904 36 11.928 36ZM30.03 36C26.31 36 23.286 34.704 20.958 32.112C19.054 29.52 18.102 26.352 18.102 22.608C18.102 16.8 20.482 11.664 25.242 7.2C30.002 2.4 35.714 0 42.378 0L44.282 6.768C39.522 7.104 35.476 8.4 32.144 10.656C28.812 12.576 26.958 15.12 26.682 18.288C28.066 17.28 29.792 16.776 31.868 16.776C34.752 16.776 37.16 17.76 39.096 19.728C41.032 21.648 42 24.144 42 27.216C42 30.288 41.032 32.784 39.096 34.704C37.16 35.568 34.006 36 30.03 36Z");
			attr_dev(path, "fill", "currentColor");
			add_location(path, file$1, 32, 6, 724);
			attr_dev(svg, "width", "42");
			attr_dev(svg, "height", "36");
			attr_dev(svg, "viewBox", "0 0 42 36");
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg, file$1, 31, 4, 622);
			attr_dev(div1, "class", "quote-icon svelte-1wtpenc");
			add_location(div1, file$1, 30, 2, 593);
			attr_dev(p, "class", "testimonial-text svelte-1wtpenc");
			add_location(p, file$1, 37, 4, 1656);
			attr_dev(div2, "class", "author-image svelte-1wtpenc");
			add_location(div2, file$1, 40, 6, 1743);
			attr_dev(h4, "class", "svelte-1wtpenc");
			add_location(h4, file$1, 48, 8, 1976);
			attr_dev(div3, "class", "author-info svelte-1wtpenc");
			add_location(div3, file$1, 47, 6, 1942);
			attr_dev(div4, "class", "testimonial-author svelte-1wtpenc");
			add_location(div4, file$1, 39, 4, 1704);
			attr_dev(div5, "class", "card-content svelte-1wtpenc");
			add_location(div5, file$1, 36, 2, 1625);
			attr_dev(div6, "class", div6_class_value = "testimonial-card " + (/*isVisible*/ ctx[5] ? 'visible' : '') + " " + (/*isHovered*/ ctx[6] ? 'hovered' : '') + " svelte-1wtpenc");
			set_style(div6, "transition-delay", 150 * /*index*/ ctx[4] + "ms");
			add_location(div6, file$1, 23, 0, 349);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div6, anchor);
			append_dev(div6, div0);
			append_dev(div6, t0);
			append_dev(div6, div1);
			append_dev(div1, svg);
			append_dev(svg, path);
			append_dev(div6, t1);
			append_dev(div6, div5);
			append_dev(div5, p);
			append_dev(p, t2);
			append_dev(div5, t3);
			append_dev(div5, div4);
			append_dev(div4, div2);
			if_block0.m(div2, null);
			append_dev(div4, t4);
			append_dev(div4, div3);
			append_dev(div3, h4);
			append_dev(h4, t5);
			append_dev(div3, t6);
			if (if_block1) if_block1.m(div3, null);

			if (!mounted) {
				dispose = [
					listen_dev(div6, "mouseenter", /*handleMouseEnter*/ ctx[7], false, false, false, false),
					listen_dev(div6, "mouseleave", /*handleMouseLeave*/ ctx[8], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*text*/ 4) set_data_dev(t2, /*text*/ ctx[2]);

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div2, null);
				}
			}

			if (dirty & /*name*/ 1) set_data_dev(t5, /*name*/ ctx[0]);

			if (/*location*/ ctx[1]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(div3, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (dirty & /*isVisible, isHovered*/ 96 && div6_class_value !== (div6_class_value = "testimonial-card " + (/*isVisible*/ ctx[5] ? 'visible' : '') + " " + (/*isHovered*/ ctx[6] ? 'hovered' : '') + " svelte-1wtpenc")) {
				attr_dev(div6, "class", div6_class_value);
			}

			if (dirty & /*index*/ 16) {
				set_style(div6, "transition-delay", 150 * /*index*/ ctx[4] + "ms");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div6);
			if_block0.d();
			if (if_block1) if_block1.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('TestimonialCard', slots, []);
	let { name } = $$props;
	let { location } = $$props;
	let { text } = $$props;
	let { image } = $$props;
	let { index = 0 } = $$props;
	let { isVisible = false } = $$props;
	let isHovered = false;

	function handleMouseEnter() {
		$$invalidate(6, isHovered = true);
	}

	function handleMouseLeave() {
		$$invalidate(6, isHovered = false);
	}

	$$self.$$.on_mount.push(function () {
		if (name === undefined && !('name' in $$props || $$self.$$.bound[$$self.$$.props['name']])) {
			console.warn("<TestimonialCard> was created without expected prop 'name'");
		}

		if (location === undefined && !('location' in $$props || $$self.$$.bound[$$self.$$.props['location']])) {
			console.warn("<TestimonialCard> was created without expected prop 'location'");
		}

		if (text === undefined && !('text' in $$props || $$self.$$.bound[$$self.$$.props['text']])) {
			console.warn("<TestimonialCard> was created without expected prop 'text'");
		}

		if (image === undefined && !('image' in $$props || $$self.$$.bound[$$self.$$.props['image']])) {
			console.warn("<TestimonialCard> was created without expected prop 'image'");
		}
	});

	const writable_props = ['name', 'location', 'text', 'image', 'index', 'isVisible'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<TestimonialCard> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('location' in $$props) $$invalidate(1, location = $$props.location);
		if ('text' in $$props) $$invalidate(2, text = $$props.text);
		if ('image' in $$props) $$invalidate(3, image = $$props.image);
		if ('index' in $$props) $$invalidate(4, index = $$props.index);
		if ('isVisible' in $$props) $$invalidate(5, isVisible = $$props.isVisible);
	};

	$$self.$capture_state = () => ({
		name,
		location,
		text,
		image,
		index,
		isVisible,
		onMount,
		isHovered,
		handleMouseEnter,
		handleMouseLeave
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('location' in $$props) $$invalidate(1, location = $$props.location);
		if ('text' in $$props) $$invalidate(2, text = $$props.text);
		if ('image' in $$props) $$invalidate(3, image = $$props.image);
		if ('index' in $$props) $$invalidate(4, index = $$props.index);
		if ('isVisible' in $$props) $$invalidate(5, isVisible = $$props.isVisible);
		if ('isHovered' in $$props) $$invalidate(6, isHovered = $$props.isHovered);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		name,
		location,
		text,
		image,
		index,
		isVisible,
		isHovered,
		handleMouseEnter,
		handleMouseLeave
	];
}

class TestimonialCard extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			name: 0,
			location: 1,
			text: 2,
			image: 3,
			index: 4,
			isVisible: 5
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "TestimonialCard",
			options,
			id: create_fragment$1.name
		});
	}

	get name() {
		throw new Error("<TestimonialCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<TestimonialCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get location() {
		throw new Error("<TestimonialCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set location(value) {
		throw new Error("<TestimonialCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get text() {
		throw new Error("<TestimonialCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<TestimonialCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get image() {
		throw new Error("<TestimonialCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set image(value) {
		throw new Error("<TestimonialCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get index() {
		throw new Error("<TestimonialCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set index(value) {
		throw new Error("<TestimonialCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isVisible() {
		throw new Error("<TestimonialCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isVisible(value) {
		throw new Error("<TestimonialCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/pages/Home.svelte generated by Svelte v3.59.2 */
const file = "src/pages/Home.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[18] = list[i];
	child_ctx[20] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[21] = list[i];
	child_ctx[20] = i;
	return child_ctx;
}

// (237:6) {#each services as service, i}
function create_each_block_1(ctx) {
	let servicecard;
	let current;

	function func() {
		return /*func*/ ctx[13](/*service*/ ctx[21]);
	}

	servicecard = new ServiceCard({
			props: {
				svgIcon: /*service*/ ctx[21].svgIcon,
				image: /*service*/ ctx[21].image,
				title: /*$currentLang*/ ctx[4] === 'hu'
				? /*service*/ ctx[21].id === 'parking'
					? '24/7 REPÜLŐTÉRI PARKOLÁS'
					: /*service*/ ctx[21].id === 'washing'
						? 'AUTÓMOSÓ'
						: /*service*/ ctx[21].id === 'tire'
							? 'GUMISZERIVZ'
							: 'AUTÓSZERVIZ'
				: /*service*/ ctx[21].id === 'parking'
					? '24/7 AIRPORT PARKING'
					: /*service*/ ctx[21].id === 'washing'
						? 'CAR WASH'
						: /*service*/ ctx[21].id === 'tire'
							? 'TIRE SERVICE'
							: 'AUTO SERVICE',
				description: /*$currentLang*/ ctx[4] === 'hu'
				? /*service*/ ctx[21].id === 'parking'
					? 'Biztonságos parkolási lehetőségünk bekerített határokkal és 24 órás kamerás megfigyeléssel rendelkezik, ami garantálja járművének a legnagyobb biztonságot.'
					: /*service*/ ctx[21].id === 'washing'
						? 'Ajándékozza meg járművét egy fürdőnappal professzionális autómosó szolgáltatásainkkal, amelyek célja, hogy autója csillogóan tisztán és fiatalon maradjon.'
						: /*service*/ ctx[21].id === 'tire'
							? 'Szakértő technikusaink készen állnak az abroncsokkal kapcsolatos bármilyen probléma azonnali megoldására, és biztonságosan visszatérni az útra.'
							: 'A rutinellenőrzéstől a komplex javításokig szakképzett szerelőink fel vannak szerelve az összes karbantartás elvégzésére.'
				: /*service*/ ctx[21].id === 'parking'
					? 'Our secure parking facility features fenced boundaries and 24-hour camera surveillance, guaranteeing the highest security for your vehicle.'
					: /*service*/ ctx[21].id === 'washing'
						? 'Treat your vehicle to a spa day with our professional car washing services aimed at keeping your car looking sparkling clean and youthful.'
						: /*service*/ ctx[21].id === 'tire'
							? 'Our expert technicians are ready to solve any tire-related problems immediately and get you safely back on the road.'
							: 'From routine checks to complex repairs, our qualified mechanics are equipped to perform all maintenance.',
				index: /*i*/ ctx[20],
				shouldAnimate: /*servicesVisible*/ ctx[1],
				ctaText: /*$currentLang*/ ctx[4] === 'hu'
				? 'Részletek'
				: 'Details',
				ctaAction: func
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(servicecard.$$.fragment);
		},
		m: function mount(target, anchor) {
			mount_component(servicecard, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const servicecard_changes = {};

			if (dirty & /*$currentLang*/ 16) servicecard_changes.title = /*$currentLang*/ ctx[4] === 'hu'
			? /*service*/ ctx[21].id === 'parking'
				? '24/7 REPÜLŐTÉRI PARKOLÁS'
				: /*service*/ ctx[21].id === 'washing'
					? 'AUTÓMOSÓ'
					: /*service*/ ctx[21].id === 'tire'
						? 'GUMISZERIVZ'
						: 'AUTÓSZERVIZ'
			: /*service*/ ctx[21].id === 'parking'
				? '24/7 AIRPORT PARKING'
				: /*service*/ ctx[21].id === 'washing'
					? 'CAR WASH'
					: /*service*/ ctx[21].id === 'tire'
						? 'TIRE SERVICE'
						: 'AUTO SERVICE';

			if (dirty & /*$currentLang*/ 16) servicecard_changes.description = /*$currentLang*/ ctx[4] === 'hu'
			? /*service*/ ctx[21].id === 'parking'
				? 'Biztonságos parkolási lehetőségünk bekerített határokkal és 24 órás kamerás megfigyeléssel rendelkezik, ami garantálja járművének a legnagyobb biztonságot.'
				: /*service*/ ctx[21].id === 'washing'
					? 'Ajándékozza meg járművét egy fürdőnappal professzionális autómosó szolgáltatásainkkal, amelyek célja, hogy autója csillogóan tisztán és fiatalon maradjon.'
					: /*service*/ ctx[21].id === 'tire'
						? 'Szakértő technikusaink készen állnak az abroncsokkal kapcsolatos bármilyen probléma azonnali megoldására, és biztonságosan visszatérni az útra.'
						: 'A rutinellenőrzéstől a komplex javításokig szakképzett szerelőink fel vannak szerelve az összes karbantartás elvégzésére.'
			: /*service*/ ctx[21].id === 'parking'
				? 'Our secure parking facility features fenced boundaries and 24-hour camera surveillance, guaranteeing the highest security for your vehicle.'
				: /*service*/ ctx[21].id === 'washing'
					? 'Treat your vehicle to a spa day with our professional car washing services aimed at keeping your car looking sparkling clean and youthful.'
					: /*service*/ ctx[21].id === 'tire'
						? 'Our expert technicians are ready to solve any tire-related problems immediately and get you safely back on the road.'
						: 'From routine checks to complex repairs, our qualified mechanics are equipped to perform all maintenance.';

			if (dirty & /*servicesVisible*/ 2) servicecard_changes.shouldAnimate = /*servicesVisible*/ ctx[1];

			if (dirty & /*$currentLang*/ 16) servicecard_changes.ctaText = /*$currentLang*/ ctx[4] === 'hu'
			? 'Részletek'
			: 'Details';

			servicecard.$set(servicecard_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(servicecard.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(servicecard.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(servicecard, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(237:6) {#each services as service, i}",
		ctx
	});

	return block;
}

// (288:6) {#each testimonials as testimonial, i}
function create_each_block(ctx) {
	let testimonialcard;
	let current;

	testimonialcard = new TestimonialCard({
			props: {
				name: /*testimonial*/ ctx[18].name,
				location: /*testimonial*/ ctx[18].location,
				text: /*testimonial*/ ctx[18].text,
				image: /*testimonial*/ ctx[18].image,
				index: /*i*/ ctx[20],
				isVisible: /*testimonialsVisible*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(testimonialcard.$$.fragment);
		},
		m: function mount(target, anchor) {
			mount_component(testimonialcard, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const testimonialcard_changes = {};
			if (dirty & /*testimonialsVisible*/ 4) testimonialcard_changes.isVisible = /*testimonialsVisible*/ ctx[2];
			testimonialcard.$set(testimonialcard_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(testimonialcard.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(testimonialcard.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(testimonialcard, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(288:6) {#each testimonials as testimonial, i}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section0;
	let div0;
	let t0;
	let div1;
	let t1;
	let div5;
	let div2;
	let h1;

	let t2_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Üdvözöljük a Zima Auto Kft-nél!'
	: 'Welcome to Zima Auto!') + "";

	let t2;
	let t3;
	let p0;

	let t4_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Ahol az autója minden igényére egy helyen kínálunk megoldást!'
	: 'Where we offer solutions for all your car needs in one place!') + "";

	let t4;
	let t5;
	let button0;

	let t6_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'FOGLALJON MOST'
	: 'BOOK NOW') + "";

	let t6;
	let t7;
	let div4;
	let span;

	let t8_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Görgessen lefelé'
	: 'Scroll down') + "";

	let t8;
	let t9;
	let div3;
	let svg0;
	let path0;
	let div4_aria_label_value;
	let t10;
	let section1;
	let div9;
	let h20;

	let t11_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'FOGLALJON HELYET'
	: 'BOOK A SPOT') + "";

	let t11;
	let t12;
	let div8;
	let div6;
	let img;
	let img_src_value;
	let t13;
	let div7;
	let p1;

	let t14_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Foglaljon biztonságos parkolóhelyet már ma! Garantált helyek, 24/7 felügyelet, ingyenes reptéri transzfer.'
	: 'Book your secure parking spot today! Guaranteed spaces, 24/7 surveillance, free airport transfer.') + "";

	let t14;
	let t15;
	let button1;

	let t16_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Reptéri Parkolás Foglalása'
	: 'Book Airport Parking') + "";

	let t16;
	let t17;
	let section2;
	let div10;
	let svg1;
	let path1;
	let t18;
	let div12;
	let h21;

	let t19_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'SZOLGÁLTATÁSOK'
	: 'OUR SERVICES') + "";

	let t19;
	let t20;
	let p2;

	let t21_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Fedezze fel átfogó szolgáltatásainkat, melyek az Ön járművének minden igényét kielégítik'
	: 'Discover our comprehensive services covering all your vehicle needs in one place') + "";

	let t21;
	let t22;
	let div11;
	let t23;
	let div13;
	let svg2;
	let path2;
	let t24;
	let section3;
	let div17;
	let div14;
	let t25;
	let div15;
	let t26;
	let div16;
	let t27;
	let div20;
	let h22;

	let t28_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Ügyfeleink Véleménye'
	: 'Customer Testimonials') + "";

	let t28;
	let t29;
	let div18;
	let t30;
	let div19;
	let button2;

	let t31_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'További vélemények'
	: 'More testimonials') + "";

	let t31;
	let t32;
	let section4;
	let div22;
	let div21;
	let h23;

	let t33_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Fedezze fel versenyképes árainkat – nézze meg most!'
	: 'Discover our competitive prices – check them out now!') + "";

	let t33;
	let t34;
	let button3;

	let t35_value = (/*$currentLang*/ ctx[4] === 'hu'
	? 'Árlista Megtekintése'
	: 'View Price List') + "";

	let t35;
	let current;
	let mounted;
	let dispose;
	let each_value_1 = /*services*/ ctx[5];
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => transition_out(each_blocks_1[i], 1, 1, () => {
		each_blocks_1[i] = null;
	});

	let each_value = /*testimonials*/ ctx[6];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out_1 = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			section0 = element("section");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			t1 = space();
			div5 = element("div");
			div2 = element("div");
			h1 = element("h1");
			t2 = text(t2_value);
			t3 = space();
			p0 = element("p");
			t4 = text(t4_value);
			t5 = space();
			button0 = element("button");
			t6 = text(t6_value);
			t7 = space();
			div4 = element("div");
			span = element("span");
			t8 = text(t8_value);
			t9 = space();
			div3 = element("div");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t10 = space();
			section1 = element("section");
			div9 = element("div");
			h20 = element("h2");
			t11 = text(t11_value);
			t12 = space();
			div8 = element("div");
			div6 = element("div");
			img = element("img");
			t13 = space();
			div7 = element("div");
			p1 = element("p");
			t14 = text(t14_value);
			t15 = space();
			button1 = element("button");
			t16 = text(t16_value);
			t17 = space();
			section2 = element("section");
			div10 = element("div");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t18 = space();
			div12 = element("div");
			h21 = element("h2");
			t19 = text(t19_value);
			t20 = space();
			p2 = element("p");
			t21 = text(t21_value);
			t22 = space();
			div11 = element("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t23 = space();
			div13 = element("div");
			svg2 = svg_element("svg");
			path2 = svg_element("path");
			t24 = space();
			section3 = element("section");
			div17 = element("div");
			div14 = element("div");
			t25 = space();
			div15 = element("div");
			t26 = space();
			div16 = element("div");
			t27 = space();
			div20 = element("div");
			h22 = element("h2");
			t28 = text(t28_value);
			t29 = space();
			div18 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t30 = space();
			div19 = element("div");
			button2 = element("button");
			t31 = text(t31_value);
			t32 = space();
			section4 = element("section");
			div22 = element("div");
			div21 = element("div");
			h23 = element("h2");
			t33 = text(t33_value);
			t34 = space();
			button3 = element("button");
			t35 = text(t35_value);
			attr_dev(div0, "class", "hero-background svelte-msc3w7");
			add_location(div0, file, 155, 2, 17881);
			attr_dev(div1, "class", "hero-overlay svelte-msc3w7");
			add_location(div1, file, 156, 2, 17919);
			attr_dev(h1, "class", "svelte-msc3w7");
			add_location(h1, file, 159, 6, 18030);
			attr_dev(p0, "class", "svelte-msc3w7");
			add_location(p0, file, 160, 6, 18131);
			attr_dev(button0, "class", "btn btn-primary svelte-msc3w7");
			add_location(button0, file, 163, 6, 18316);
			attr_dev(div2, "class", "hero-content svelte-msc3w7");
			add_location(div2, file, 158, 4, 17997);
			attr_dev(span, "class", "svelte-msc3w7");
			add_location(span, file, 188, 6, 19114);
			attr_dev(path0, "d", "M12 5v14M5 12l7 7 7-7");
			add_location(path0, file, 191, 10, 19421);
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "width", "24");
			attr_dev(svg0, "height", "24");
			attr_dev(svg0, "viewBox", "0 0 24 24");
			attr_dev(svg0, "fill", "none");
			attr_dev(svg0, "stroke", "currentColor");
			attr_dev(svg0, "stroke-width", "2");
			attr_dev(svg0, "stroke-linecap", "round");
			attr_dev(svg0, "stroke-linejoin", "round");
			attr_dev(svg0, "class", "svelte-msc3w7");
			add_location(svg0, file, 190, 8, 19229);
			attr_dev(div3, "class", "scroll-arrow svelte-msc3w7");
			add_location(div3, file, 189, 6, 19194);
			attr_dev(div4, "class", "scroll-down-indicator svelte-msc3w7");
			attr_dev(div4, "tabindex", "0");
			attr_dev(div4, "role", "button");

			attr_dev(div4, "aria-label", div4_aria_label_value = /*$currentLang*/ ctx[4] === 'hu'
			? 'Görgessen lefelé'
			: 'Scroll down');

			add_location(div4, file, 168, 4, 18482);
			attr_dev(div5, "class", "container hero-container svelte-msc3w7");
			add_location(div5, file, 157, 2, 17954);
			attr_dev(section0, "class", "hero svelte-msc3w7");
			add_location(section0, file, 154, 0, 17832);
			attr_dev(h20, "class", "section-title svelte-msc3w7");
			add_location(h20, file, 200, 4, 19592);
			if (!src_url_equal(img.src, img_src_value = "images/zima-gate.JPG")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Airport Parking");
			attr_dev(img, "loading", "lazy");
			attr_dev(img, "class", "svelte-msc3w7");
			add_location(img, file, 204, 8, 19763);
			attr_dev(div6, "class", "booking-image svelte-msc3w7");
			add_location(div6, file, 203, 6, 19727);
			attr_dev(p1, "class", "booking-description svelte-msc3w7");
			add_location(p1, file, 207, 8, 19892);
			attr_dev(button1, "class", "btn btn-primary booking-btn svelte-msc3w7");
			add_location(button1, file, 212, 9, 20217);
			attr_dev(div7, "class", "booking-content svelte-msc3w7");
			add_location(div7, file, 206, 6, 19854);
			attr_dev(div8, "class", "booking-container svelte-msc3w7");
			add_location(div8, file, 202, 4, 19689);
			attr_dev(div9, "class", "container");
			add_location(div9, file, 199, 2, 19564);
			attr_dev(section1, "class", "booking-section svelte-msc3w7");
			attr_dev(section1, "id", "booking");
			add_location(section1, file, 198, 0, 19515);
			attr_dev(path1, "fill", "#ffffff");
			attr_dev(path1, "fill-opacity", "1");
			attr_dev(path1, "d", "M0,0L1440,0L1440,0L0,0Z");
			add_location(path1, file, 223, 6, 20627);
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg1, "viewBox", "0 0 1440 20");
			attr_dev(svg1, "preserveAspectRatio", "none");
			attr_dev(svg1, "class", "svelte-msc3w7");
			add_location(svg1, file, 222, 4, 20531);
			attr_dev(div10, "class", "wave-top svelte-msc3w7");
			add_location(div10, file, 221, 2, 20504);
			attr_dev(h21, "class", "section-title svelte-msc3w7");
			add_location(h21, file, 228, 4, 20752);
			attr_dev(p2, "class", "section-subtitle svelte-msc3w7");
			add_location(p2, file, 229, 4, 20847);
			attr_dev(div11, "class", "services-grid svelte-msc3w7");
			add_location(div11, file, 235, 4, 21114);
			attr_dev(div12, "class", "container");
			add_location(div12, file, 227, 2, 20724);
			attr_dev(path2, "fill", "#141a25");
			attr_dev(path2, "fill-opacity", "1");
			attr_dev(path2, "d", "M0,20L1440,20L1440,20L0,20Z");
			add_location(path2, file, 269, 6, 23514);
			attr_dev(svg2, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg2, "viewBox", "0 0 1440 20");
			attr_dev(svg2, "preserveAspectRatio", "none");
			attr_dev(svg2, "class", "svelte-msc3w7");
			add_location(svg2, file, 268, 4, 23418);
			attr_dev(div13, "class", "wave-bottom svelte-msc3w7");
			add_location(div13, file, 267, 2, 23388);
			attr_dev(section2, "class", "services-section svelte-msc3w7");
			attr_dev(section2, "id", "services");
			add_location(section2, file, 220, 0, 20452);
			attr_dev(div14, "class", "shape shape-1 svelte-msc3w7");
			add_location(div14, file, 276, 4, 23701);
			attr_dev(div15, "class", "shape shape-2 svelte-msc3w7");
			add_location(div15, file, 277, 4, 23739);
			attr_dev(div16, "class", "shape shape-3 svelte-msc3w7");
			add_location(div16, file, 278, 4, 23777);
			attr_dev(div17, "class", "background-shapes svelte-msc3w7");
			add_location(div17, file, 275, 2, 23665);
			attr_dev(h22, "class", "section-title svelte-msc3w7");
			add_location(h22, file, 282, 4, 23851);
			attr_dev(div18, "class", "testimonials-grid svelte-msc3w7");
			add_location(div18, file, 286, 4, 23974);
			attr_dev(button2, "class", "btn btn-outline svelte-msc3w7");
			add_location(button2, file, 300, 6, 24365);
			attr_dev(div19, "class", "testimonials-footer svelte-msc3w7");
			add_location(div19, file, 299, 4, 24325);
			attr_dev(div20, "class", "container svelte-msc3w7");
			add_location(div20, file, 281, 2, 23823);
			attr_dev(section3, "class", "testimonials-section svelte-msc3w7");
			add_location(section3, file, 274, 0, 23624);
			attr_dev(h23, "class", "svelte-msc3w7");
			add_location(h23, file, 310, 6, 24615);
			attr_dev(button3, "class", "btn btn-outline svelte-msc3w7");
			add_location(button3, file, 311, 6, 24768);
			attr_dev(div21, "class", "cta-content svelte-msc3w7");
			add_location(div21, file, 309, 4, 24583);
			attr_dev(div22, "class", "container");
			add_location(div22, file, 308, 2, 24555);
			attr_dev(section4, "class", "cta-section svelte-msc3w7");
			add_location(section4, file, 307, 0, 24523);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, section0, anchor);
			append_dev(section0, div0);
			append_dev(section0, t0);
			append_dev(section0, div1);
			append_dev(section0, t1);
			append_dev(section0, div5);
			append_dev(div5, div2);
			append_dev(div2, h1);
			append_dev(h1, t2);
			append_dev(div2, t3);
			append_dev(div2, p0);
			append_dev(p0, t4);
			append_dev(div2, t5);
			append_dev(div2, button0);
			append_dev(button0, t6);
			append_dev(div5, t7);
			append_dev(div5, div4);
			append_dev(div4, span);
			append_dev(span, t8);
			append_dev(div4, t9);
			append_dev(div4, div3);
			append_dev(div3, svg0);
			append_dev(svg0, path0);
			/*section0_binding*/ ctx[11](section0);
			insert_dev(target, t10, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, div9);
			append_dev(div9, h20);
			append_dev(h20, t11);
			append_dev(div9, t12);
			append_dev(div9, div8);
			append_dev(div8, div6);
			append_dev(div6, img);
			append_dev(div8, t13);
			append_dev(div8, div7);
			append_dev(div7, p1);
			append_dev(p1, t14);
			append_dev(div7, t15);
			append_dev(div7, button1);
			append_dev(button1, t16);
			insert_dev(target, t17, anchor);
			insert_dev(target, section2, anchor);
			append_dev(section2, div10);
			append_dev(div10, svg1);
			append_dev(svg1, path1);
			append_dev(section2, t18);
			append_dev(section2, div12);
			append_dev(div12, h21);
			append_dev(h21, t19);
			append_dev(div12, t20);
			append_dev(div12, p2);
			append_dev(p2, t21);
			append_dev(div12, t22);
			append_dev(div12, div11);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				if (each_blocks_1[i]) {
					each_blocks_1[i].m(div11, null);
				}
			}

			append_dev(section2, t23);
			append_dev(section2, div13);
			append_dev(div13, svg2);
			append_dev(svg2, path2);
			insert_dev(target, t24, anchor);
			insert_dev(target, section3, anchor);
			append_dev(section3, div17);
			append_dev(div17, div14);
			append_dev(div17, t25);
			append_dev(div17, div15);
			append_dev(div17, t26);
			append_dev(div17, div16);
			append_dev(section3, t27);
			append_dev(section3, div20);
			append_dev(div20, h22);
			append_dev(h22, t28);
			append_dev(div20, t29);
			append_dev(div20, div18);

			for (let i = 0; i < each_blocks.length; i += 1) {
				if (each_blocks[i]) {
					each_blocks[i].m(div18, null);
				}
			}

			append_dev(div20, t30);
			append_dev(div20, div19);
			append_dev(div19, button2);
			append_dev(button2, t31);
			insert_dev(target, t32, anchor);
			insert_dev(target, section4, anchor);
			append_dev(section4, div22);
			append_dev(div22, div21);
			append_dev(div21, h23);
			append_dev(h23, t33);
			append_dev(div21, t34);
			append_dev(div21, button3);
			append_dev(button3, t35);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*click_handler*/ ctx[8], false, false, false, false),
					listen_dev(div4, "click", /*click_handler_1*/ ctx[9], false, false, false, false),
					listen_dev(div4, "keydown", /*keydown_handler*/ ctx[10], false, false, false, false),
					listen_dev(button1, "click", /*click_handler_2*/ ctx[12], false, false, false, false),
					listen_dev(button3, "click", /*click_handler_3*/ ctx[14], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*$currentLang*/ 16) && t2_value !== (t2_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Üdvözöljük a Zima Auto Kft-nél!'
			: 'Welcome to Zima Auto!') + "")) set_data_dev(t2, t2_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t4_value !== (t4_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Ahol az autója minden igényére egy helyen kínálunk megoldást!'
			: 'Where we offer solutions for all your car needs in one place!') + "")) set_data_dev(t4, t4_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t6_value !== (t6_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'FOGLALJON MOST'
			: 'BOOK NOW') + "")) set_data_dev(t6, t6_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t8_value !== (t8_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Görgessen lefelé'
			: 'Scroll down') + "")) set_data_dev(t8, t8_value);

			if (!current || dirty & /*$currentLang*/ 16 && div4_aria_label_value !== (div4_aria_label_value = /*$currentLang*/ ctx[4] === 'hu'
			? 'Görgessen lefelé'
			: 'Scroll down')) {
				attr_dev(div4, "aria-label", div4_aria_label_value);
			}

			if ((!current || dirty & /*$currentLang*/ 16) && t11_value !== (t11_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'FOGLALJON HELYET'
			: 'BOOK A SPOT') + "")) set_data_dev(t11, t11_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t14_value !== (t14_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Foglaljon biztonságos parkolóhelyet már ma! Garantált helyek, 24/7 felügyelet, ingyenes reptéri transzfer.'
			: 'Book your secure parking spot today! Guaranteed spaces, 24/7 surveillance, free airport transfer.') + "")) set_data_dev(t14, t14_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t16_value !== (t16_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Reptéri Parkolás Foglalása'
			: 'Book Airport Parking') + "")) set_data_dev(t16, t16_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t19_value !== (t19_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'SZOLGÁLTATÁSOK'
			: 'OUR SERVICES') + "")) set_data_dev(t19, t19_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t21_value !== (t21_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Fedezze fel átfogó szolgáltatásainkat, melyek az Ön járművének minden igényét kielégítik'
			: 'Discover our comprehensive services covering all your vehicle needs in one place') + "")) set_data_dev(t21, t21_value);

			if (dirty & /*services, $currentLang, servicesVisible, handleServiceAction*/ 178) {
				each_value_1 = /*services*/ ctx[5];
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
						transition_in(each_blocks_1[i], 1);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						transition_in(each_blocks_1[i], 1);
						each_blocks_1[i].m(div11, null);
					}
				}

				group_outros();

				for (i = each_value_1.length; i < each_blocks_1.length; i += 1) {
					out(i);
				}

				check_outros();
			}

			if ((!current || dirty & /*$currentLang*/ 16) && t28_value !== (t28_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Ügyfeleink Véleménye'
			: 'Customer Testimonials') + "")) set_data_dev(t28, t28_value);

			if (dirty & /*testimonials, testimonialsVisible*/ 68) {
				each_value = /*testimonials*/ ctx[6];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div18, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out_1(i);
				}

				check_outros();
			}

			if ((!current || dirty & /*$currentLang*/ 16) && t31_value !== (t31_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'További vélemények'
			: 'More testimonials') + "")) set_data_dev(t31, t31_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t33_value !== (t33_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Fedezze fel versenyképes árainkat – nézze meg most!'
			: 'Discover our competitive prices – check them out now!') + "")) set_data_dev(t33, t33_value);

			if ((!current || dirty & /*$currentLang*/ 16) && t35_value !== (t35_value = (/*$currentLang*/ ctx[4] === 'hu'
			? 'Árlista Megtekintése'
			: 'View Price List') + "")) set_data_dev(t35, t35_value);
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				transition_in(each_blocks_1[i]);
			}

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks_1 = each_blocks_1.filter(Boolean);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				transition_out(each_blocks_1[i]);
			}

			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section0);
			/*section0_binding*/ ctx[11](null);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(section1);
			if (detaching) detach_dev(t17);
			if (detaching) detach_dev(section2);
			destroy_each(each_blocks_1, detaching);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(section3);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t32);
			if (detaching) detach_dev(section4);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $currentLang;
	validate_store(currentLang, 'currentLang');
	component_subscribe($$self, currentLang, $$value => $$invalidate(4, $currentLang = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Home', slots, []);
	gsapWithCSS.registerPlugin(ScrollTrigger);
	let { navigate } = $$props;
	let lang;
	let servicesVisible = false;
	let testimonialsVisible = false;
	let bookingVisible = false;
	let ctaVisible = false;
	let heroSection;

	// Subscribe to language changes
	currentLang.subscribe(value => {
		lang = value;
	});

	// Service data with SVG icons instead of image paths
	const services = [
		{
			id: 'parking',
			svgIcon: `<svg fill="#ffffff" width="219px" height="219px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M12,6H9A1,1,0,0,0,8,7V17a1,1,0,0,0,2,0V14h2a4,4,0,0,0,0-8Zm0,6H10V8h2a2,2,0,0,1,0,4ZM19,2H5A3,3,0,0,0,2,5V19a3,3,0,0,0,3,3H19a3,3,0,0,0,3-3V5A3,3,0,0,0,19,2Zm1,17a1,1,0,0,1-1,1H5a1,1,0,0,1-1-1V5A1,1,0,0,1,5,4H19a1,1,0,0,1,1,1Z"></path></g></svg>`,
			image: 'images/parking-lot.jpg'
		},
		{
			id: 'washing',
			svgIcon: `<svg fill="#ffffff" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="M142.25,206.819c-11.982,0.247-23.234-6.299-28.755-17.521l-2.751-5.591H62.71l1.296-5.894 c-5.764-0.319-11.242-2.802-15.533-7.128c-4.972-5.008-8.189-12.11-9.732-21.491l-14.374,65.334l0.249,60.473 C10.504,278.339,0,291.007,0,306.138c0,17.674,14.326,32,32,32h22.252c0-39.307,31.979-71.286,71.286-71.286 c12.595,0,24.428,3.297,34.707,9.052v-69.417L142.25,206.819z"></path> </g> </g> <g> <g> <path d="M301.995,74.561c-4.888-8.729-14.137-14.15-24.14-14.15H136.613c5.117,8.867,4.418,20.507,2.632,30.824h39.416 c8.615-10.736,21.831-17.628,36.636-17.628c14.804,0,28.021,6.892,36.636,17.628h24.074l50.407,90.015 c-0.493-4.596,0.054-9.945,2.447-16.113c2.611-6.727,8.117-12.181,14.736-16.29L301.995,74.561z"></path> </g> </g> <g> <g> <path d="M352.07,260.154c-3.421-4.743-6.068-9.242-8.122-13.501l-40.47,13.681c-11.896,4.025-24.553,0.473-32.751-8.072 c0,67.969,0.052,26.197,0.052,85.876h55.885c0-27.503,15.665-51.4,38.532-63.283C360.825,271.131,356.463,266.245,352.07,260.154z "></path> </g> </g> <g> <g> <path d="M490.667,275.966c0-4.949,0-10.028,0-15.137h-23.202c-11.436,0-20.706-9.27-20.706-20.706 c0-11.436,9.27-20.706,20.706-20.706h20.006c-7.529-20.927-27.547-35.896-51.066-35.896h-20.637 c3.383,11.767,5.348,26.998-1.26,39.26c-5.568,10.331-4.45,31.472-4.45,36.857c0,2.834-0.471,5.526-1.302,8.034 c34.198,5.222,60.48,34.833,60.48,70.468c3.943,0,6.995,0,10.765,0c17.672,0,32-14.328,32-32 C512,292.206,503.094,280.36,490.667,275.966z"></path> </g> </g> <g> <g> <path d="M125.539,289.327c-26.957,0.001-48.81,21.854-48.81,48.811s21.853,48.81,48.81,48.81c13.359,0,25.459-5.371,34.272-14.066 v-69.488C150.997,294.698,138.897,289.327,125.539,289.327z M125.539,357.908c-10.919,0-19.77-8.851-19.77-19.77 s8.851-19.77,19.77-19.77c10.919,0,19.77,8.851,19.77,19.77S136.458,357.908,125.539,357.908z"></path> </g> </g> <g> <g> <path d="M397.949,289.328c-26.957,0-48.81,21.853-48.81,48.81c0,26.957,21.852,48.81,48.81,48.81 c26.957,0,48.81-21.853,48.81-48.81C446.758,311.181,424.906,289.328,397.949,289.328z M397.949,357.908 c-10.919,0-19.77-8.851-19.77-19.77s8.851-19.77,19.77-19.77s19.77,8.851,19.77,19.77S408.868,357.908,397.949,357.908z"></path> </g> </g> <g> <g> <path d="M384.574,159.738c-2.448-2.26-6.1-3.212-10.227-3.212c-11.621,0-26.995,7.553-29.773,14.712 c-1.873,4.827-1.758,8.322-0.671,11.21c13.144,0.327,24.716,8.792,28.945,21.305c4.753,14.058-1.07,29.178-13.161,36.697 c1.569,3.091,3.544,6.362,6.055,9.844c8.994,12.472,16.122,16.696,20.858,16.696c4.271,0,6.597-3.434,6.597-7.353 c0-6.78-1.437-30.186,6.469-44.854C407.572,200.115,393.916,168.361,384.574,159.738z"></path> </g> </g> <g> <g> <path d="M123.24,72.004C120.8,59.525,92.948,52.038,84.177,57.639c-13.97,8.921-3.438,18.865-9.36,29.381 c-5.923,10.516-20.068,17.661-20.289,46.903c-0.154,20.329,5.579,27.099,10.73,27.099c2.259,0,4.406-1.303,5.895-3.335 c2.548-3.478,8.601-12.716,16.538-20.826l-1.148-2.332c-7.641-15.526-1.226-34.374,14.301-42.016 c6.617-3.257,14.104-4.104,21.46-2.291C123.718,82.948,124.069,76.249,123.24,72.004z"></path> </g> </g> <g> <g> <path d="M356.879,209.151c-0.001-0.003-0.002-0.007-0.003-0.01c-2.563-7.571-10.85-11.669-18.409-9.099 c-14.502,4.902-23.759,8.033-38.712,13.087c-4.507-7.356-15.44-25.202-20.63-33.671c-7.251-11.835-20.379-19.185-34.258-19.185 c-83.287,0-60.216-0.155-94.254,0.474c-4.401-8.943-18.447-37.486-22.879-46.493c-3.565-7.248-12.34-10.118-19.448-6.62 c-7.199,3.543-10.163,12.249-6.621,19.447c16.505,33.54,11.631,23.638,26.954,54.773c2.49,5.06,7.758,8.245,13.302,8.11 c37.258-0.689,34.271-0.64,35.182-0.64c0,0.256-0.435,84.692-0.435,249.492c0,9.627,7.805,17.431,17.431,17.431 c9.625,0,17.431-7.804,17.431-17.431c0-14.798,0-110.297,0-125.829h7.526c0,15.538,0,110.994,0,125.829 c0,9.627,7.805,17.431,17.431,17.431c9.627,0,17.431-7.804,17.431-17.431c0-54.87-0.049-180.103-0.051-239.359 c0-0.709,0.471-1.331,1.153-1.524c0.682-0.193,1.41,0.09,1.781,0.694c3.083,5.025,9.717,15.869,24.234,39.564 c3.537,5.771,10.603,8.352,17.041,6.174c31.192-10.545,16.238-5.49,49.694-16.801 C355.383,224.992,359.442,216.736,356.879,209.151z"></path> </g> </g> <g> <g> <circle cx="215.299" cy="120.568" r="30.709"></circle> </g> </g> </g></svg>`,
			image: 'images/car-wash.jpg'
		},
		{
			id: 'tire',
			svgIcon: `<svg fill="#ffffff" height="238px" width="238px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <g> <path d="M494.916,254.43C494.336,119.185,419.934,7.603,325.521,0.384l-0.008-0.008C322.278,0.128,319.019,0,315.742,0H196.275 C152.226,0,111.872,22.852,80.64,60.646l2.628-0.657l59.46-16.998c2.406-0.674,4.992-0.282,7.074,1.109l20.872,13.901 L191.539,44.1c2.543-1.707,5.811-1.903,8.55-0.538l29.739,14.865c-3.456,4.497-6.801,9.173-10.001,14.089l-22.946-11.469 l-21.478,14.319c-2.867,1.911-6.596,1.911-9.463,0l-22.315-14.882L87.689,76.467L64.87,82.176 c-3.072,4.736-6.007,9.643-8.823,14.703l9.097,7.441l20.19,13.423l20.873-13.909c2.867-1.92,6.596-1.92,9.463,0l20.873,13.901 l20.864-13.901c2.543-1.707,5.811-1.903,8.55-0.538l30.174,15.087c-2.116,5.231-4.105,10.615-5.982,16.094l-27.401-13.696 L141.269,135.1c-2.867,1.911-6.596,1.911-9.464,0l-20.864-13.909L90.069,135.1c-2.867,1.911-6.596,1.911-9.464,0l-25.6-17.067 l-6.972-5.7c-12.066,25.318-20.992,53.896-26.095,84.582l6.784-6.716l24.909-25.506c1.596-1.621,3.78-2.552,6.059-2.56 c2.185,0.068,4.471,0.887,6.084,2.5l19.567,19.558l19.567-19.558c3.328-3.337,8.73-3.337,12.066,0l19.567,19.558l19.567-19.558 c3.328-3.337,8.73-3.337,12.066,0l10.761,10.761c-1.365,6.494-2.594,13.073-3.635,19.78c-0.742-0.393-1.502-0.785-2.125-1.408 l-11.034-11.034L142.575,202.3c-3.337,3.328-8.738,3.328-12.066,0l-19.567-19.567L91.375,202.3 c-3.337,3.328-8.738,3.328-12.066,0L59.81,182.801l-18.978,19.43l-22.34,22.127c-0.247,2.816-0.469,5.641-0.648,8.491 l12.151,7.296l28.058,14.003L79.309,232.9c3.328-3.337,8.73-3.337,12.066,0l19.567,19.558l19.567-19.558 c2.765-2.765,7.066-3.294,10.419-1.289l29.841,17.903c-0.034,2.159-0.094,4.309-0.094,6.485c0,4.531,0.085,9.028,0.23,13.5 l-33.05-19.831l-20.881,20.898c-3.337,3.328-8.738,3.328-12.066,0l-19.567-19.567l-19.567,19.567 c-2.594,2.594-6.554,3.251-9.856,1.596l-34.133-17.067l-4.651-2.79c-0.009,1.237-0.06,2.458-0.06,3.695 c0,29.653,3.584,58.129,10.112,84.642l25.455-38.178c1.417-2.125,3.712-3.507,6.255-3.763c2.56-0.239,5.069,0.657,6.878,2.466 l19.567,19.558l19.567-19.558c3.328-3.337,8.73-3.337,12.066,0l19.567,19.558l19.567-19.558c3.328-3.337,8.73-3.337,12.066,0 l5.717,5.709c1.109,8.738,2.526,17.306,4.19,25.702c-1.792-0.239-3.533-0.905-4.907-2.278l-11.034-11.034l-19.567,19.567 c-3.337,3.328-8.738,3.328-12.066,0l-19.567-19.567l-19.567,19.567c-3.337,3.328-8.738,3.328-12.066,0l-18.244-18.244 L33.297,362.24c3.499,10.906,7.518,21.402,12.015,31.42l8.875-7.603l16.589-16.623c3.328-3.336,8.73-3.336,12.066,0 l19.567,19.558l19.567-19.558c3.328-3.336,8.73-3.336,12.066,0l18.236,18.236l11.298-16.939 c2.381-3.575,7.066-4.821,10.914-2.901l14.797,7.398c2.705,8.124,5.709,15.966,8.934,23.552l-24.627-12.314l-12.885,19.328 c-1.417,2.125-3.721,3.507-6.263,3.763c-2.586,0.222-5.069-0.657-6.869-2.458l-19.567-19.567L108.442,407.1 c-3.337,3.328-8.738,3.328-12.066,0l-19.567-19.567l-11.034,11.034l-12.8,10.974c9.779,18.577,21.308,35.157,34.193,49.34 l10.948-5.478l25.156-16.768c2.867-1.92,6.596-1.92,9.463,0l20.873,13.901l20.864-13.901c2.867-1.92,6.596-1.92,9.463,0 l20.873,13.901l15.386-10.249c3.174,4.847,6.502,9.464,9.924,13.892L209.536,467.9c-2.867,1.911-6.596,1.911-9.464,0 l-20.864-13.909L158.336,467.9c-2.867,1.911-6.596,1.911-9.464,0l-20.864-13.909L107.136,467.9 c-0.29,0.196-0.597,0.375-0.913,0.529l-6.366,3.183C127.718,497.126,160.794,512,196.275,512h119.467 c2.944,0,5.939-0.119,8.969-0.35h0.009c0.213,0,0.435,0,0.649-0.017c4.198-0.324,8.644-0.939,13.508-1.835 c75.699-13.892,137.464-95.036,152.576-203.315c2.159-16.521,3.328-33.485,3.473-50.483 C494.925,255.991,494.916,254.438,494.916,254.43z M474.547,304.188c-14.319,102.519-72.149,178.671-142.14,189.278 c-2.611,0.401-5.239,0.853-7.799,1.075c-0.179-0.017-0.35-0.051-0.529-0.068c-2.492-0.247-4.966-0.597-7.424-1.05 c-0.862-0.162-1.707-0.367-2.568-0.546c-1.801-0.384-3.593-0.802-5.367-1.289c-0.939-0.265-1.877-0.538-2.807-0.828 c-1.724-0.538-3.439-1.118-5.146-1.758c-0.87-0.316-1.749-0.631-2.611-0.981c-1.963-0.794-3.9-1.656-5.828-2.577 c-0.555-0.265-1.126-0.503-1.681-0.776c-2.517-1.254-5.018-2.62-7.475-4.088c-0.299-0.179-0.58-0.384-0.879-0.563 c-2.142-1.314-4.258-2.697-6.349-4.164c-0.623-0.435-1.246-0.905-1.86-1.357c-1.792-1.306-3.567-2.662-5.316-4.079 c-0.614-0.495-1.229-0.998-1.835-1.51c-1.852-1.553-3.678-3.174-5.478-4.855c-0.427-0.393-0.853-0.776-1.28-1.178 c-6.886-6.571-13.406-14.037-19.507-22.315c-0.205-0.282-0.41-0.572-0.623-0.853c-1.852-2.551-3.678-5.171-5.453-7.868 c-0.179-0.273-0.35-0.538-0.529-0.802c-7.859-12.049-14.908-25.506-20.992-40.132c-0.401-0.973-0.802-1.937-1.195-2.918 c-1.903-4.71-3.703-9.54-5.393-14.472c-0.017-0.034-0.026-0.068-0.034-0.102c-1.69-4.915-3.268-9.933-4.745-15.053 c-0.017-0.043-0.026-0.085-0.043-0.128c-1.434-4.984-2.756-10.078-3.985-15.249c-0.111-0.461-0.213-0.939-0.324-1.399 c-1.152-4.949-2.219-9.975-3.174-15.078c-0.034-0.196-0.077-0.384-0.111-0.58c-0.947-5.103-1.775-10.3-2.517-15.539 c-0.137-0.93-0.256-1.86-0.375-2.79c-0.666-4.966-1.254-9.975-1.732-15.053c-0.026-0.29-0.06-0.58-0.085-0.879 c-0.478-5.205-0.819-10.479-1.084-15.795c-0.06-1.229-0.111-2.466-0.162-3.703c-0.222-5.35-0.367-10.726-0.367-16.162 c0-3.968,0.06-7.919,0.171-11.836c0.043-1.254,0.119-2.483,0.171-3.729c0.102-2.662,0.196-5.325,0.35-7.97 c0.102-1.647,0.247-3.268,0.367-4.907c0.162-2.202,0.299-4.42,0.495-6.613c0.179-1.963,0.41-3.9,0.614-5.854 c0.188-1.835,0.358-3.686,0.572-5.504c0.23-1.92,0.512-3.806,0.776-5.717c0.247-1.818,0.469-3.652,0.734-5.461 c0.282-1.852,0.614-3.678,0.922-5.513c0.299-1.818,0.58-3.661,0.904-5.461c0.341-1.869,0.734-3.703,1.101-5.555 c0.341-1.732,0.666-3.482,1.033-5.197c0.41-1.937,0.87-3.823,1.314-5.734c0.375-1.596,0.717-3.217,1.109-4.796 c0.478-1.946,1.007-3.857,1.519-5.777c0.401-1.502,0.777-3.029,1.195-4.514c0.538-1.903,1.118-3.763,1.681-5.632 c0.444-1.468,0.862-2.953,1.323-4.403c0.58-1.843,1.212-3.635,1.818-5.453c0.486-1.434,0.947-2.901,1.451-4.318 c0.674-1.911,1.399-3.763,2.099-5.641c0.486-1.271,0.939-2.569,1.434-3.823c0.776-1.971,1.596-3.891,2.398-5.82 c0.469-1.118,0.913-2.261,1.391-3.362c0.828-1.903,1.698-3.746,2.552-5.606c0.503-1.084,0.981-2.202,1.502-3.277 c0.862-1.818,1.775-3.575,2.671-5.35c0.546-1.067,1.058-2.159,1.613-3.208c0.922-1.749,1.877-3.448,2.833-5.154 c0.563-1.015,1.109-2.057,1.69-3.063c0.956-1.655,1.946-3.26,2.935-4.872c0.606-0.998,1.195-2.022,1.809-2.995 c1.007-1.587,2.048-3.115,3.081-4.659c0.631-0.947,1.246-1.911,1.886-2.842c1.067-1.536,2.167-3.012,3.26-4.497 c0.64-0.87,1.263-1.766,1.911-2.62c1.118-1.468,2.27-2.876,3.422-4.292c0.648-0.811,1.289-1.647,1.946-2.432 c1.178-1.399,2.381-2.731,3.584-4.079c0.666-0.742,1.314-1.519,2.056-2.185c0.734-0.666,1.451-1.357,2.185-2.005 c1.28-1.109,2.586-2.15,3.883-3.2c0.742-0.606,1.468-1.237,2.219-1.818c1.323-1.024,2.679-1.971,4.028-2.935 c0.742-0.538,1.485-1.109,2.236-1.621c1.331-0.913,2.697-1.741,4.053-2.586c0.794-0.495,1.579-1.033,2.372-1.502 c1.357-0.802,2.739-1.527,4.113-2.261c0.819-0.444,1.63-0.913,2.449-1.331c1.417-0.478,2.859-0.862,4.284-1.271c0.896-0.256,1.783-0.546,2.679-0.776c1.417-0.358,2.859-0.623,4.284-0.913 c0.93-0.196,1.86-0.418,2.79-0.58c1.425-0.247,2.867-0.401,4.301-0.58c0.905-0.111,1.792-0.256,2.697-0.333 c85.248,7.1,152.329,110.993,152.866,236.851l0.009,1.604C477.722,272.171,476.604,288.427,474.547,304.188z"></path> <path d="M252.855,151.971c-0.282-0.273-0.538-0.572-0.785-0.887l-3.081-4.019c-11.708,30.541-18.586,67.959-18.586,108.928 c0,40.747,6.801,77.995,18.389,108.442l3.763-4.105c17.493-17.263,29.047-59.076,29.047-104.337 C281.604,210.74,270.05,168.927,252.855,151.971z"></path> <path d="M332.806,68.262c-30.49,0-57.378,23.39-75.981,60.954l8.448,11.042c20.309,20.48,33.399,65.784,33.399,115.738 c0,50.313-13.278,95.906-33.835,116.173l-8.61,9.404c18.62,38.272,45.764,62.157,76.578,62.157 c57.421,0,102.4-82.458,102.4-187.733S390.227,68.262,332.806,68.262z"></path> </g> </g> </g> </g></svg>`,
			image: 'images/merc-tyre.jpg'
		},
		{
			id: 'service',
			svgIcon: `<svg fill="#ffffff" width="223px" height="223px" viewBox="0 0 15 15" xmlns="http://www.w3.org/2000/svg" id="car-repair"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M12.6,8.7,11.5,6.5a1.05,1.05,0,0,0-.9-.5H4.4a1.05,1.05,0,0,0-.9.5L2.4,8.7,1.16,9.852a.5.5,0,0,0-.16.367V14.5a.5.5,0,0,0,.5.5h2c.2,0,.5-.2.5-.4V14h7v.5c0,.2.2.5.4.5h2.1a.5.5,0,0,0,.5-.5V10.219a.5.5,0,0,0-.16-.367ZM4.5,7h6l1,2h-8ZM5,11.6c0,.2-.3.4-.5.4H2.4c-.2,0-.4-.3-.4-.5V10.4c.1-.3.3-.5.6-.4l2,.4c.2,0,.4.3.4.5Zm8-.1c0,.2-.2.5-.4.5H10.5c-.2,0-.5-.2-.5-.4v-.7c0-.2.2-.5.4-.5l2-.4c.3-.1.5.1.6.4ZM14,2V3a1.009,1.009,0,0,1-1.017,1H5.348A2.549,2.549,0,0,1,1,3.5H3.5v-2H1A2.549,2.549,0,0,1,5.348,1h7.635A1.009,1.009,0,0,1,14,2Z"></path> </g></svg>`,
			image: 'images/workshop.jpg'
		}
	];

	// Testimonial data
	const testimonials = [
		{
			id: 1,
			name: 'Csilla Demcsák',
			location: '',
			text: 'Nagyon profik. Fiatalok, energikusak, jó áron dolgoznak! Nagyon szép és kényelmes volt, hogy a javítást, a gumijavítást és az autótisztítást egyben elvégezhettem.',
			image: null
		},
		{
			id: 2,
			name: 'Helyi idegenvezető',
			location: '',
			text: 'Minden dicséret a tulajnak, kivitt minket a reptérre és vissza a parkolóba. Problémánk volt az autón a kerékkel, amit a tulajdonos segítségével megoldottunk. Még egyszer köszönöm és minden ajánlást ehhez a parkolóhoz.',
			image: null
		},
		{
			id: 3,
			name: 'Kubilay Öztürk',
			location: '',
			text: 'Minden gördülékeny volt, ajánlom őket!!',
			image: null
		}
	];

	// Handler for service card CTA buttons
	function handleServiceAction(serviceId) {
		// Navigate to services section
		navigate('services');
	} // Note: Scrolling to specific service ID after navigating to #services
	// might require additional logic depending on your routing setup.

	// The navigate function likely handles scrolling to the main #services anchor.
	// Removed the scrollToNextSection function as navigate will be used
	// function scrollToNextSection() {
	//   const viewportHeight = window.innerHeight;
	//   window.scrollTo({
	//     top: viewportHeight,
	//     behavior: 'smooth'
	//   });
	// }
	onMount(() => {
		// Setup parallax effect for hero section
		// Setup animations with ScrollTrigger
		// Booking section animation
		gsapWithCSS.from('.booking-container', {
			y: 50,
			opacity: 0,
			duration: 0.8,
			scrollTrigger: {
				trigger: '.booking-section',
				start: 'top 80%',
				onEnter: () => {
					bookingVisible = true;
				}
			}
		});

		// Services section animation (handled by the shouldAnimate prop)
		const servicesSection = document.querySelector('.services-section');

		if (servicesSection) {
			ScrollTrigger.create({
				trigger: servicesSection,
				start: 'top 70%',
				onEnter: () => {
					$$invalidate(1, servicesVisible = true);
				}
			});
		}

		// Testimonials section animation
		const testimonialsSection = document.querySelector('.testimonials-section');

		if (testimonialsSection) {
			ScrollTrigger.create({
				trigger: testimonialsSection,
				start: 'top 70%',
				onEnter: () => {
					$$invalidate(2, testimonialsVisible = true);
				}
			});
		}

		// CTA section animation
		gsapWithCSS.from('.cta-content', {
			y: 30,
			opacity: 0,
			duration: 0.8,
			scrollTrigger: {
				trigger: '.cta-section',
				start: 'top 80%',
				onEnter: () => {
					ctaVisible = true;
				}
			}
		});
	});

	$$self.$$.on_mount.push(function () {
		if (navigate === undefined && !('navigate' in $$props || $$self.$$.bound[$$self.$$.props['navigate']])) {
			console.warn("<Home> was created without expected prop 'navigate'");
		}
	});

	const writable_props = ['navigate'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Home> was created with unknown prop '${key}'`);
	});

	const click_handler = () => navigate('booking');

	const click_handler_1 = () => {
		const nextSection = document.querySelector('.booking-section');

		if (nextSection) {
			nextSection.scrollIntoView({ behavior: 'smooth' });
		}
	};

	const keydown_handler = e => {
		if (e.key === 'Enter') {
			const nextSection = document.querySelector('.booking-section');

			if (nextSection) {
				nextSection.scrollIntoView({ behavior: 'smooth' });
			}
		}
	};

	function section0_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			heroSection = $$value;
			$$invalidate(3, heroSection);
		});
	}

	const click_handler_2 = () => navigate('booking');
	const func = service => handleServiceAction(service.id);
	const click_handler_3 = () => navigate('services');

	$$self.$$set = $$props => {
		if ('navigate' in $$props) $$invalidate(0, navigate = $$props.navigate);
	};

	$$self.$capture_state = () => ({
		onMount,
		currentLang,
		t,
		ServiceCard,
		TestimonialCard,
		gsap: gsapWithCSS,
		ScrollTrigger,
		navigate,
		lang,
		servicesVisible,
		testimonialsVisible,
		bookingVisible,
		ctaVisible,
		heroSection,
		services,
		testimonials,
		handleServiceAction,
		$currentLang
	});

	$$self.$inject_state = $$props => {
		if ('navigate' in $$props) $$invalidate(0, navigate = $$props.navigate);
		if ('lang' in $$props) lang = $$props.lang;
		if ('servicesVisible' in $$props) $$invalidate(1, servicesVisible = $$props.servicesVisible);
		if ('testimonialsVisible' in $$props) $$invalidate(2, testimonialsVisible = $$props.testimonialsVisible);
		if ('bookingVisible' in $$props) bookingVisible = $$props.bookingVisible;
		if ('ctaVisible' in $$props) ctaVisible = $$props.ctaVisible;
		if ('heroSection' in $$props) $$invalidate(3, heroSection = $$props.heroSection);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		navigate,
		servicesVisible,
		testimonialsVisible,
		heroSection,
		$currentLang,
		services,
		testimonials,
		handleServiceAction,
		click_handler,
		click_handler_1,
		keydown_handler,
		section0_binding,
		click_handler_2,
		func,
		click_handler_3
	];
}

class Home extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { navigate: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Home",
			options,
			id: create_fragment.name
		});
	}

	get navigate() {
		throw new Error("<Home>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set navigate(value) {
		throw new Error("<Home>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Home as default };
//# sourceMappingURL=Home-1e5e68d1.js.map
