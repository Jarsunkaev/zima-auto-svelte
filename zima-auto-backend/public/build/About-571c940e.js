
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, o as onMount, J as onDestroy, K as globals, e as element, a as space, b as svg_element, L as empty, q as src_url_equal, c as attr_dev, f as add_location, h as insert_dev, j as append_dev, l as listen_dev, A as transition_in, B as group_outros, D as transition_out, C as check_outros, p as detach_dev, r as run_all, M as bubble, F as binding_callbacks, t as text, N as stop_propagation, O as add_render_callback, P as create_bidirectional_transition, u as validate_each_argument, w as validate_store, x as component_subscribe, y as currentLang, z as t, G as create_component, H as mount_component, m as set_data_dev, I as destroy_component, E as destroy_each, Q as HtmlTag } from './main-00d1c1b7.js';
import { g as gsapWithCSS } from './index-171583ae.js';
import { S as ScrollTrigger } from './ScrollTrigger-d3438372.js';
import { f as fade, s as scale } from './index-2fedee7d.js';

/* src/components/VideoPlayer.svelte generated by Svelte v3.59.2 */

const { console: console_1 } = globals;
const file$1 = "src/components/VideoPlayer.svelte";

// (96:2) {#if isModalOpen}
function create_if_block$1(ctx) {
	let div1;
	let div0;
	let button;
	let svg;
	let path0;
	let path1;
	let t0;
	let video;
	let source;
	let source_src_value;
	let track;
	let track_src_value;
	let t1;
	let div0_transition;
	let div1_transition;
	let current;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			button = element("button");
			svg = svg_element("svg");
			path0 = svg_element("path");
			path1 = svg_element("path");
			t0 = space();
			video = element("video");
			source = element("source");
			track = element("track");
			t1 = text("\n          Your browser does not support the video tag.");
			attr_dev(path0, "d", "M18 6L6 18");
			add_location(path0, file$1, 117, 12, 3044);
			attr_dev(path1, "d", "M6 6l12 12");
			add_location(path1, file$1, 118, 12, 3085);
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "stroke", "currentColor");
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "stroke-width", "2");
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", "svelte-hmqhtt");
			add_location(svg, file$1, 116, 10, 2908);
			attr_dev(button, "class", "close-button svelte-hmqhtt");
			attr_dev(button, "aria-label", "Close video");
			add_location(button, file$1, 111, 8, 2782);
			if (!src_url_equal(source.src, source_src_value = /*videoSrc*/ ctx[0])) attr_dev(source, "src", source_src_value);
			attr_dev(source, "type", "video/mp4");
			add_location(source, file$1, 130, 10, 3358);
			attr_dev(track, "kind", "captions");
			if (!src_url_equal(track.src, track_src_value = "")) attr_dev(track, "src", track_src_value);
			attr_dev(track, "label", "English");
			attr_dev(track, "srclang", "en");
			add_location(track, file$1, 131, 10, 3411);
			attr_dev(video, "class", "video-element svelte-hmqhtt");
			video.controls = true;
			attr_dev(video, "preload", "metadata");
			attr_dev(video, "poster", /*thumbnailSrc*/ ctx[1]);
			video.playsInline = true;
			add_location(video, file$1, 122, 8, 3166);
			attr_dev(div0, "class", "modal-content svelte-hmqhtt");
			attr_dev(div0, "role", "dialog");
			add_location(div0, file$1, 103, 6, 2547);
			attr_dev(div1, "class", "modal-overlay svelte-hmqhtt");
			attr_dev(div1, "role", "presentation");
			add_location(div1, file$1, 96, 4, 2358);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, button);
			append_dev(button, svg);
			append_dev(svg, path0);
			append_dev(svg, path1);
			append_dev(div0, t0);
			append_dev(div0, video);
			append_dev(video, source);
			append_dev(video, track);
			append_dev(video, t1);
			/*video_binding*/ ctx[11](video);
			/*div0_binding*/ ctx[12](div0);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button, "click", /*closeModal*/ ctx[6], false, false, false, false),
					listen_dev(div0, "click", stop_propagation(/*click_handler*/ ctx[8]), false, false, true, false),
					listen_dev(div0, "keydown", stop_propagation(/*keydown_handler*/ ctx[9]), false, false, true, false),
					listen_dev(div1, "click", /*handleClickOutside*/ ctx[7], false, false, false, false),
					listen_dev(div1, "keydown", /*handleClickOutside*/ ctx[7], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*videoSrc*/ 1 && !src_url_equal(source.src, source_src_value = /*videoSrc*/ ctx[0])) {
				attr_dev(source, "src", source_src_value);
			}

			if (!current || dirty & /*thumbnailSrc*/ 2) {
				attr_dev(video, "poster", /*thumbnailSrc*/ ctx[1]);
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!current) return;
				if (!div0_transition) div0_transition = create_bidirectional_transition(div0, scale, { duration: 300, start: 0.9 }, true);
				div0_transition.run(1);
			});

			add_render_callback(() => {
				if (!current) return;
				if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fade, { duration: 250 }, true);
				div1_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!div0_transition) div0_transition = create_bidirectional_transition(div0, scale, { duration: 300, start: 0.9 }, false);
			div0_transition.run(0);
			if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fade, { duration: 250 }, false);
			div1_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			/*video_binding*/ ctx[11](null);
			/*div0_binding*/ ctx[12](null);
			if (detaching && div0_transition) div0_transition.end();
			if (detaching && div1_transition) div1_transition.end();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(96:2) {#if isModalOpen}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let div3;
	let div2;
	let img;
	let img_src_value;
	let t0;
	let div1;
	let div0;
	let svg;
	let path;
	let t1;
	let if_block_anchor;
	let current;
	let mounted;
	let dispose;
	let if_block = /*isModalOpen*/ ctx[2] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			div3 = element("div");
			div2 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			div0 = element("div");
			svg = svg_element("svg");
			path = svg_element("path");
			t1 = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
			if (!src_url_equal(img.src, img_src_value = /*thumbnailSrc*/ ctx[1])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Video thumbnail");
			attr_dev(img, "class", "thumbnail-image svelte-hmqhtt");
			attr_dev(img, "loading", "lazy");
			add_location(img, file$1, 78, 6, 1944);
			attr_dev(path, "d", "M8 5v14l11-7z");
			add_location(path, file$1, 88, 12, 2234);
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "fill", "currentColor");
			attr_dev(svg, "aria-hidden", "true");
			attr_dev(svg, "class", "svelte-hmqhtt");
			add_location(svg, file$1, 87, 10, 2157);
			attr_dev(div0, "class", "play-button svelte-hmqhtt");
			add_location(div0, file$1, 86, 8, 2121);
			attr_dev(div1, "class", "play-overlay svelte-hmqhtt");
			add_location(div1, file$1, 85, 6, 2086);
			attr_dev(div2, "class", "thumbnail-wrapper svelte-hmqhtt");
			attr_dev(div2, "role", "button");
			attr_dev(div2, "tabindex", "0");
			attr_dev(div2, "aria-label", "Play video");
			add_location(div2, file$1, 70, 4, 1739);
			attr_dev(div3, "class", "video-thumbnail svelte-hmqhtt");
			add_location(div3, file$1, 69, 2, 1705);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div2);
			append_dev(div2, img);
			append_dev(div2, t0);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, svg);
			append_dev(svg, path);
			insert_dev(target, t1, anchor);
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(div2, "click", /*openModal*/ ctx[5], false, false, false, false),
					listen_dev(div2, "keydown", /*keydown_handler_1*/ ctx[10], false, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*thumbnailSrc*/ 2 && !src_url_equal(img.src, img_src_value = /*thumbnailSrc*/ ctx[1])) {
				attr_dev(img, "src", img_src_value);
			}

			if (/*isModalOpen*/ ctx[2]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*isModalOpen*/ 4) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
			if (detaching) detach_dev(t1);
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('VideoPlayer', slots, []);
	let { videoSrc = "/zima_video.mp4" } = $$props;
	let { thumbnailSrc = "/images/zima-gate.JPG" } = $$props;

	// State
	let isModalOpen = false;

	let videoRef;
	let modalContentRef;

	function openModal() {
		$$invalidate(2, isModalOpen = true);
		document.body.style.overflow = 'hidden';

		// Initialize video when modal opens
		setTimeout(
			() => {
				if (videoRef) {
					$$invalidate(3, videoRef.currentTime = 0, videoRef);

					try {
						const playPromise = videoRef.play();

						if (playPromise !== undefined) {
							playPromise.catch(error => {
								console.warn('Autoplay prevented, waiting for user interaction');
							});
						}
					} catch(error) {
						console.warn('Error attempting to play video:', error);
					}
				}
			},
			300
		);
	}

	function closeModal() {
		$$invalidate(2, isModalOpen = false);

		if (videoRef) {
			videoRef.pause();
			$$invalidate(3, videoRef.currentTime = 0, videoRef);
		}

		document.body.style.overflow = '';
	}

	function handleClickOutside(event) {
		if (modalContentRef && !modalContentRef.contains(event.target)) {
			closeModal();
		}
	}

	function handleEscKey(e) {
		if (e.key === 'Escape' && isModalOpen) {
			closeModal();
		}
	}

	onMount(() => {
		document.addEventListener('keydown', handleEscKey);
	});

	onDestroy(() => {
		document.removeEventListener('keydown', handleEscKey);
		document.body.style.overflow = '';
	});

	const writable_props = ['videoSrc', 'thumbnailSrc'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<VideoPlayer> was created with unknown prop '${key}'`);
	});

	function click_handler(event) {
		bubble.call(this, $$self, event);
	}

	function keydown_handler(event) {
		bubble.call(this, $$self, event);
	}

	const keydown_handler_1 = e => e.key === 'Enter' && openModal();

	function video_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			videoRef = $$value;
			$$invalidate(3, videoRef);
		});
	}

	function div0_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			modalContentRef = $$value;
			$$invalidate(4, modalContentRef);
		});
	}

	$$self.$$set = $$props => {
		if ('videoSrc' in $$props) $$invalidate(0, videoSrc = $$props.videoSrc);
		if ('thumbnailSrc' in $$props) $$invalidate(1, thumbnailSrc = $$props.thumbnailSrc);
	};

	$$self.$capture_state = () => ({
		onMount,
		onDestroy,
		fade,
		scale,
		videoSrc,
		thumbnailSrc,
		isModalOpen,
		videoRef,
		modalContentRef,
		openModal,
		closeModal,
		handleClickOutside,
		handleEscKey
	});

	$$self.$inject_state = $$props => {
		if ('videoSrc' in $$props) $$invalidate(0, videoSrc = $$props.videoSrc);
		if ('thumbnailSrc' in $$props) $$invalidate(1, thumbnailSrc = $$props.thumbnailSrc);
		if ('isModalOpen' in $$props) $$invalidate(2, isModalOpen = $$props.isModalOpen);
		if ('videoRef' in $$props) $$invalidate(3, videoRef = $$props.videoRef);
		if ('modalContentRef' in $$props) $$invalidate(4, modalContentRef = $$props.modalContentRef);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		videoSrc,
		thumbnailSrc,
		isModalOpen,
		videoRef,
		modalContentRef,
		openModal,
		closeModal,
		handleClickOutside,
		click_handler,
		keydown_handler,
		keydown_handler_1,
		video_binding,
		div0_binding
	];
}

class VideoPlayer extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { videoSrc: 0, thumbnailSrc: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "VideoPlayer",
			options,
			id: create_fragment$1.name
		});
	}

	get videoSrc() {
		throw new Error("<VideoPlayer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set videoSrc(value) {
		throw new Error("<VideoPlayer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get thumbnailSrc() {
		throw new Error("<VideoPlayer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set thumbnailSrc(value) {
		throw new Error("<VideoPlayer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/pages/About.svelte generated by Svelte v3.59.2 */
const file = "src/pages/About.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

// (225:16) {:else}
function create_else_block(ctx) {
	let t_1_value = /*item*/ ctx[3] + "";
	let t_1;

	const block = {
		c: function create() {
			t_1 = text(t_1_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*$currentLang*/ 1 && t_1_value !== (t_1_value = /*item*/ ctx[3] + "")) set_data_dev(t_1, t_1_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(225:16) {:else}",
		ctx
	});

	return block;
}

// (223:16) {#if $currentLang === 'hu'}
function create_if_block(ctx) {
	let html_tag;
	let raw_value = /*item*/ ctx[3].replace(/\n/g, '<br><br>') + "";
	let html_anchor;

	const block = {
		c: function create() {
			html_tag = new HtmlTag(false);
			html_anchor = empty();
			html_tag.a = html_anchor;
		},
		m: function mount(target, anchor) {
			html_tag.m(raw_value, target, anchor);
			insert_dev(target, html_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*$currentLang*/ 1 && raw_value !== (raw_value = /*item*/ ctx[3].replace(/\n/g, '<br><br>') + "")) html_tag.p(raw_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(html_anchor);
			if (detaching) html_tag.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(223:16) {#if $currentLang === 'hu'}",
		ctx
	});

	return block;
}

// (221:12) {#each content[$currentLang].offerings.block1.listItems as item}
function create_each_block(ctx) {
	let li;
	let t_1;

	function select_block_type(ctx, dirty) {
		if (/*$currentLang*/ ctx[0] === 'hu') return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			li = element("li");
			if_block.c();
			t_1 = space();
			attr_dev(li, "class", "svelte-19mr3sz");
			add_location(li, file, 221, 14, 11529);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			if_block.m(li, null);
			append_dev(li, t_1);
		},
		p: function update(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(li, t_1);
				}
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
			if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(221:12) {#each content[$currentLang].offerings.block1.listItems as item}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section0;
	let div0;
	let h1;
	let t0_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].title + "";
	let t0;
	let t1;
	let p0;
	let t2_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].subtitle + "";
	let t2;
	let t3;
	let div20;
	let section1;
	let div4;
	let div3;
	let div1;
	let h20;
	let t4_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].story.title + "";
	let t4;
	let t5;
	let p1;
	let t6_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].story.text + "";
	let t6;
	let t7;
	let div2;
	let img0;
	let img0_src_value;
	let t8;
	let section2;
	let div8;
	let div7;
	let div5;
	let img1;
	let img1_src_value;
	let t9;
	let div6;
	let h21;
	let t10_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].mission.title + "";
	let t10;
	let t11;
	let p2;
	let t12_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].mission.text + "";
	let t12;
	let t13;
	let section3;
	let div11;
	let h22;
	let t14_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].values.title + "";
	let t14;
	let t15;
	let div10;
	let div9;
	let videoplayer;
	let t16;
	let p3;
	let t17_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].values.videoCaption + "";
	let t17;
	let t18;
	let section4;
	let div18;
	let h23;
	let t19_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.mainTitle + "";
	let t19;
	let t20;
	let div14;
	let div12;
	let h30;
	let t21_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block1.title + "";
	let t21;
	let t22;
	let p4;
	let t23_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block1.text + "";
	let t23;
	let t24;
	let ul;
	let t25;
	let div13;
	let img2;
	let img2_src_value;
	let t26;
	let div17;
	let div15;
	let img3;
	let img3_src_value;
	let t27;
	let div16;
	let h31;
	let t28_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.paymentOptionsTitle + "";
	let t28;
	let t29;
	let p5;
	let t30_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.paymentOptionsText + "";
	let t30;
	let t31;
	let h32;
	let t32_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.pricesTitle + "";
	let t32;
	let t33;
	let p6;
	let t34_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.pricesText + "";
	let t34;
	let t35;
	let p7;
	let raw_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.conclusion.replace(/\n/g, '<br><br>') + "";
	let t36;
	let section5;
	let div19;
	let a;
	let t37_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].cta + "";
	let t37;
	let current;

	videoplayer = new VideoPlayer({
			props: {
				videoSrc: "/zima_video.mp4",
				thumbnailSrc: "/images/zima-gate.JPG"
			},
			$$inline: true
		});

	let each_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block1.listItems;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			section0 = element("section");
			div0 = element("div");
			h1 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			p0 = element("p");
			t2 = text(t2_value);
			t3 = space();
			div20 = element("div");
			section1 = element("section");
			div4 = element("div");
			div3 = element("div");
			div1 = element("div");
			h20 = element("h2");
			t4 = text(t4_value);
			t5 = space();
			p1 = element("p");
			t6 = text(t6_value);
			t7 = space();
			div2 = element("div");
			img0 = element("img");
			t8 = space();
			section2 = element("section");
			div8 = element("div");
			div7 = element("div");
			div5 = element("div");
			img1 = element("img");
			t9 = space();
			div6 = element("div");
			h21 = element("h2");
			t10 = text(t10_value);
			t11 = space();
			p2 = element("p");
			t12 = text(t12_value);
			t13 = space();
			section3 = element("section");
			div11 = element("div");
			h22 = element("h2");
			t14 = text(t14_value);
			t15 = space();
			div10 = element("div");
			div9 = element("div");
			create_component(videoplayer.$$.fragment);
			t16 = space();
			p3 = element("p");
			t17 = text(t17_value);
			t18 = space();
			section4 = element("section");
			div18 = element("div");
			h23 = element("h2");
			t19 = text(t19_value);
			t20 = space();
			div14 = element("div");
			div12 = element("div");
			h30 = element("h3");
			t21 = text(t21_value);
			t22 = space();
			p4 = element("p");
			t23 = text(t23_value);
			t24 = space();
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t25 = space();
			div13 = element("div");
			img2 = element("img");
			t26 = space();
			div17 = element("div");
			div15 = element("div");
			img3 = element("img");
			t27 = space();
			div16 = element("div");
			h31 = element("h3");
			t28 = text(t28_value);
			t29 = space();
			p5 = element("p");
			t30 = text(t30_value);
			t31 = space();
			h32 = element("h3");
			t32 = text(t32_value);
			t33 = space();
			p6 = element("p");
			t34 = text(t34_value);
			t35 = space();
			p7 = element("p");
			t36 = space();
			section5 = element("section");
			div19 = element("div");
			a = element("a");
			t37 = text(t37_value);
			attr_dev(h1, "class", "svelte-19mr3sz");
			add_location(h1, file, 161, 4, 9576);
			attr_dev(p0, "class", "svelte-19mr3sz");
			add_location(p0, file, 162, 4, 9619);
			attr_dev(div0, "class", "container");
			add_location(div0, file, 160, 2, 9548);
			attr_dev(section0, "class", "about-hero svelte-19mr3sz");
			add_location(section0, file, 159, 0, 9517);
			attr_dev(h20, "class", "svelte-19mr3sz");
			add_location(h20, file, 171, 10, 9863);
			attr_dev(p1, "class", "svelte-19mr3sz");
			add_location(p1, file, 172, 10, 9918);
			attr_dev(div1, "class", "about-content svelte-19mr3sz");
			add_location(div1, file, 170, 8, 9825);
			if (!src_url_equal(img0.src, img0_src_value = "images/parking-lot.jpg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "Zima Auto parking lot");
			attr_dev(img0, "class", "svelte-19mr3sz");
			add_location(img0, file, 175, 10, 10019);
			attr_dev(div2, "class", "about-image svelte-19mr3sz");
			add_location(div2, file, 174, 8, 9983);
			attr_dev(div3, "class", "about-grid svelte-19mr3sz");
			add_location(div3, file, 169, 6, 9792);
			attr_dev(div4, "class", "container");
			add_location(div4, file, 168, 4, 9762);
			attr_dev(section1, "class", "about-section story-section svelte-19mr3sz");
			add_location(section1, file, 167, 2, 9712);
			if (!src_url_equal(img1.src, img1_src_value = "images/map.avif")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "Car Wash Service");
			attr_dev(img1, "class", "svelte-19mr3sz");
			add_location(img1, file, 185, 10, 10298);
			attr_dev(div5, "class", "about-image svelte-19mr3sz");
			add_location(div5, file, 184, 8, 10262);
			attr_dev(h21, "class", "svelte-19mr3sz");
			add_location(h21, file, 188, 10, 10412);
			attr_dev(p2, "class", "svelte-19mr3sz");
			add_location(p2, file, 189, 10, 10469);
			attr_dev(div6, "class", "about-content svelte-19mr3sz");
			add_location(div6, file, 187, 8, 10374);
			attr_dev(div7, "class", "about-grid reverse svelte-19mr3sz");
			add_location(div7, file, 183, 6, 10221);
			attr_dev(div8, "class", "container");
			add_location(div8, file, 182, 4, 10191);
			attr_dev(section2, "class", "about-section mission-section svelte-19mr3sz");
			add_location(section2, file, 181, 2, 10139);
			attr_dev(h22, "class", "section-title svelte-19mr3sz");
			add_location(h22, file, 197, 6, 10649);
			attr_dev(div9, "class", "video-container svelte-19mr3sz");
			add_location(div9, file, 200, 8, 10774);
			attr_dev(p3, "class", "video-caption svelte-19mr3sz");
			add_location(p3, file, 206, 8, 10954);
			attr_dev(div10, "class", "video-section-wrapper svelte-19mr3sz");
			add_location(div10, file, 199, 6, 10730);
			attr_dev(div11, "class", "container");
			add_location(div11, file, 196, 4, 10619);
			attr_dev(section3, "class", "about-section values-section svelte-19mr3sz");
			add_location(section3, file, 195, 2, 10568);
			attr_dev(h23, "class", "section-title svelte-19mr3sz");
			add_location(h23, file, 213, 6, 11151);
			attr_dev(h30, "class", "svelte-19mr3sz");
			add_location(h30, file, 217, 10, 11304);
			attr_dev(p4, "class", "svelte-19mr3sz");
			add_location(p4, file, 218, 10, 11370);
			attr_dev(ul, "class", "svelte-19mr3sz");
			add_location(ul, file, 219, 10, 11433);
			attr_dev(div12, "class", "about-content svelte-19mr3sz");
			add_location(div12, file, 216, 8, 11266);
			if (!src_url_equal(img2.src, img2_src_value = "images/workshop2.jpg")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "alt", "Auto Service");
			attr_dev(img2, "class", "svelte-19mr3sz");
			add_location(img2, file, 232, 10, 11822);
			attr_dev(div13, "class", "about-image svelte-19mr3sz");
			add_location(div13, file, 231, 8, 11786);
			attr_dev(div14, "class", "about-grid svelte-19mr3sz");
			add_location(div14, file, 215, 6, 11233);
			if (!src_url_equal(img3.src, img3_src_value = "images/car-wash.jpg")) attr_dev(img3, "src", img3_src_value);
			attr_dev(img3, "alt", "Car Wash");
			attr_dev(img3, "class", "svelte-19mr3sz");
			add_location(img3, file, 238, 10, 11988);
			attr_dev(div15, "class", "about-image svelte-19mr3sz");
			add_location(div15, file, 237, 8, 11952);
			attr_dev(h31, "class", "svelte-19mr3sz");
			add_location(h31, file, 241, 10, 12098);
			attr_dev(p5, "class", "svelte-19mr3sz");
			add_location(p5, file, 242, 10, 12178);
			attr_dev(h32, "class", "svelte-19mr3sz");
			add_location(h32, file, 244, 10, 12256);
			attr_dev(p6, "class", "svelte-19mr3sz");
			add_location(p6, file, 245, 10, 12328);
			attr_dev(p7, "class", "svelte-19mr3sz");
			add_location(p7, file, 247, 10, 12398);
			attr_dev(div16, "class", "about-content svelte-19mr3sz");
			add_location(div16, file, 240, 8, 12060);
			attr_dev(div17, "class", "about-grid reverse svelte-19mr3sz");
			add_location(div17, file, 236, 6, 11911);
			attr_dev(div18, "class", "container");
			add_location(div18, file, 212, 4, 11121);
			attr_dev(section4, "class", "about-section offerings-section svelte-19mr3sz");
			add_location(section4, file, 211, 2, 11067);
			attr_dev(a, "href", "#services");
			attr_dev(a, "class", "btn btn-primary svelte-19mr3sz");
			add_location(a, file, 255, 6, 12607);
			attr_dev(div19, "class", "container");
			add_location(div19, file, 254, 4, 12577);
			attr_dev(section5, "class", "about-cta svelte-19mr3sz");
			add_location(section5, file, 253, 2, 12545);
			attr_dev(div20, "class", "about-container svelte-19mr3sz");
			add_location(div20, file, 166, 0, 9680);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, section0, anchor);
			append_dev(section0, div0);
			append_dev(div0, h1);
			append_dev(h1, t0);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(p0, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, div20, anchor);
			append_dev(div20, section1);
			append_dev(section1, div4);
			append_dev(div4, div3);
			append_dev(div3, div1);
			append_dev(div1, h20);
			append_dev(h20, t4);
			append_dev(div1, t5);
			append_dev(div1, p1);
			append_dev(p1, t6);
			append_dev(div3, t7);
			append_dev(div3, div2);
			append_dev(div2, img0);
			append_dev(div20, t8);
			append_dev(div20, section2);
			append_dev(section2, div8);
			append_dev(div8, div7);
			append_dev(div7, div5);
			append_dev(div5, img1);
			append_dev(div7, t9);
			append_dev(div7, div6);
			append_dev(div6, h21);
			append_dev(h21, t10);
			append_dev(div6, t11);
			append_dev(div6, p2);
			append_dev(p2, t12);
			append_dev(div20, t13);
			append_dev(div20, section3);
			append_dev(section3, div11);
			append_dev(div11, h22);
			append_dev(h22, t14);
			append_dev(div11, t15);
			append_dev(div11, div10);
			append_dev(div10, div9);
			mount_component(videoplayer, div9, null);
			append_dev(div10, t16);
			append_dev(div10, p3);
			append_dev(p3, t17);
			append_dev(div20, t18);
			append_dev(div20, section4);
			append_dev(section4, div18);
			append_dev(div18, h23);
			append_dev(h23, t19);
			append_dev(div18, t20);
			append_dev(div18, div14);
			append_dev(div14, div12);
			append_dev(div12, h30);
			append_dev(h30, t21);
			append_dev(div12, t22);
			append_dev(div12, p4);
			append_dev(p4, t23);
			append_dev(div12, t24);
			append_dev(div12, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				if (each_blocks[i]) {
					each_blocks[i].m(ul, null);
				}
			}

			append_dev(div14, t25);
			append_dev(div14, div13);
			append_dev(div13, img2);
			append_dev(div18, t26);
			append_dev(div18, div17);
			append_dev(div17, div15);
			append_dev(div15, img3);
			append_dev(div17, t27);
			append_dev(div17, div16);
			append_dev(div16, h31);
			append_dev(h31, t28);
			append_dev(div16, t29);
			append_dev(div16, p5);
			append_dev(p5, t30);
			append_dev(div16, t31);
			append_dev(div16, h32);
			append_dev(h32, t32);
			append_dev(div16, t33);
			append_dev(div16, p6);
			append_dev(p6, t34);
			append_dev(div16, t35);
			append_dev(div16, p7);
			p7.innerHTML = raw_value;
			append_dev(div20, t36);
			append_dev(div20, section5);
			append_dev(section5, div19);
			append_dev(div19, a);
			append_dev(a, t37);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*$currentLang*/ 1) && t0_value !== (t0_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].title + "")) set_data_dev(t0, t0_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t2_value !== (t2_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].subtitle + "")) set_data_dev(t2, t2_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t4_value !== (t4_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].story.title + "")) set_data_dev(t4, t4_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t6_value !== (t6_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].story.text + "")) set_data_dev(t6, t6_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t10_value !== (t10_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].mission.title + "")) set_data_dev(t10, t10_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t12_value !== (t12_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].mission.text + "")) set_data_dev(t12, t12_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t14_value !== (t14_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].values.title + "")) set_data_dev(t14, t14_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t17_value !== (t17_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].values.videoCaption + "")) set_data_dev(t17, t17_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t19_value !== (t19_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.mainTitle + "")) set_data_dev(t19, t19_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t21_value !== (t21_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block1.title + "")) set_data_dev(t21, t21_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t23_value !== (t23_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block1.text + "")) set_data_dev(t23, t23_value);

			if (dirty & /*content, $currentLang*/ 3) {
				each_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block1.listItems;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if ((!current || dirty & /*$currentLang*/ 1) && t28_value !== (t28_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.paymentOptionsTitle + "")) set_data_dev(t28, t28_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t30_value !== (t30_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.paymentOptionsText + "")) set_data_dev(t30, t30_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t32_value !== (t32_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.pricesTitle + "")) set_data_dev(t32, t32_value);
			if ((!current || dirty & /*$currentLang*/ 1) && t34_value !== (t34_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.pricesText + "")) set_data_dev(t34, t34_value);
			if ((!current || dirty & /*$currentLang*/ 1) && raw_value !== (raw_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].offerings.block2.conclusion.replace(/\n/g, '<br><br>') + "")) p7.innerHTML = raw_value;			if ((!current || dirty & /*$currentLang*/ 1) && t37_value !== (t37_value = /*content*/ ctx[1][/*$currentLang*/ ctx[0]].cta + "")) set_data_dev(t37, t37_value);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(videoplayer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(videoplayer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(div20);
			destroy_component(videoplayer);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $currentLang;
	validate_store(currentLang, 'currentLang');
	component_subscribe($$self, currentLang, $$value => $$invalidate(0, $currentLang = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('About', slots, []);
	gsapWithCSS.registerPlugin(ScrollTrigger);
	let lang;

	// Subscribe to language changes
	currentLang.subscribe(value => {
		lang = value;
	});

	// About content translations - UPDATED AND STRUCTURED FOR NEW LAYOUT
	const content = {
		hu: {
			title: 'Kik vagyunk?',
			subtitle: 'A Zima Autó Kft-nél új értelmet kap a kényelem és a kiválóság az autóápolási szolgáltatások terén. Több mint egy évtizedes tapasztalattal és szakértelemmel, büszkén kínáljuk az egyik legkiterjedtebb autószolgáltatási kínálatot, amely az Ön járművének minden igényét kielégíti egy helyen.',
			story: {
				title: 'Tapasztalat, amiben megbízhat',
				text: 'Több mint 10 év tapasztalattal szolgálva ügyfeleinket, tökéletesítettük képességeinket és finomítottuk folyamatainkat annak érdekében, hogy a legmagasabb színvonalú szolgáltatást és ügyfél-elégedettséget biztosítsunk. Járműve csak a legjobbat érdemli, és pontosan ezt nyújtjuk a Zima Autó Kft-nél.'
			},
			// Repurposed 'mission' section for location
			mission: {
				title: 'Kiváló elhelyezkedés',
				text: 'Stratégiai helyen, mindössze 5 kilométerre és 5 percre a Budapest Liszt Ferenc Nemzetközi Repülőterétől, Vecsésen, létesítményünk páratlan elérhetőséget és kényelmet biztosít. Búcsút mondhat a városban szétszórva lévő szolgáltatók keresési nehézségeinek. A Zima Autó Kft-vel gyorsan és hatékonyan kezelheti minden autójával kapcsolatos igényét, időt és energiát megtakarítva ezzel.'
			},
			// Repurposed 'values' section for 'Why Choose Us?'
			values: {
				title: 'Miért válasszon minket?',
				videoCaption: 'Tekintse meg videónkat és ismerje meg szolgáltatásainkat!'
			},
			// New structure for services, pricing, and conclusion - split for grid layout
			offerings: {
				mainTitle: 'Szolgáltatásaink, áraink és fizetési lehetőségek',
				block1: {
					// First grid block content
					title: 'Átfogó Szolgáltatási Kínálat',
					text: 'Megértjük, hogy járműve több, mint egyszerű közlekedési eszköz; egy befektetés, amely megérdemli a legnagyobb gondosságot és figyelmet. Ezért kínálunk teljes körű szolgáltatási listát, ideértve:',
					listItems: [
						// Detailed list for HU
						'Repülőtéri parkoló: Nyugodtan utazzon tudva, hogy járműve biztonságban van, amíg Ön távol van. Biztonságos parkoló létesítményünk körbekerített és 24/7-es kamerafelügyelettel biztosítja járműve maximális biztonságát. Ráadásul élvezze az ingyenes repülőtéri transzfert a parkolóból a repülőtérre kényelmes shuttle szolgáltatásunkkal, ami megszünteti az utazási logisztika stresszét. 3000 négyzetméteres, nyitott parkolóhelyünkön 150 parkolóhely áll rendelkezésre, így járművének helyet találni sosem jelenthet gondot. Akár online foglalja, akár egyszerűen csak behajt, mi gondoskodunk róla.',
						'Kézi Autómosó: Kényeztesse járművét egy profi külső-belső autómosás szolgáltatással, amely ragyogóan tisztává és újjászületetté varázsolja autóját.',
						'Gumiszervíz: Ne engedje, hogy egy defektes gumi gátat szabjon a programjának. Szakértőink azonnal foglalkoznak bármilyen gumival kapcsolatos problémával, gumicserével, és biztonságosan visszajuttatják Önt az útra.',
						'Autószervíz: A rutinellenőrzésektől a bonyolult javításokig képzett szerelőink fel vannak készülve az Ön karbantartási és javítási igényeinek kezelésére, hogy járműve zökkenőmentesen és hatékonyan működjön.'
					]
				},
				block2: {
					// Second grid block content
					paymentOptionsTitle: 'Rugalmas fizetési lehetőségek',
					paymentOptionsText: 'Tudjuk, hogy a kényelem fontos, ezért rugalmas fizetési lehetőségeket kínálunk, beleértve a készpénzes, bankkártyás fizetést is.',
					pricesTitle: 'Versenyképes árak',
					pricesText: 'A Zima Autó Kft-nél úgy véljük, hogy a minőségi autóápolásnak mindenki számára elérhetőnek kell lennie. Ezért kínáljuk a legjobb árakat minden szolgáltatásunkra, biztosítva, hogy a lehető legtöbbet kapja pénzéért, anélkül, hogy engednénk a minőségből.',
					conclusion: 'Tapasztalja meg a különbséget a Zima Autó Kft-nél - ahol minden alkalommal a kiválóság találkozik a kényelemmel.\n\nLépjen kapcsolatba velünk még ma, hogy felfedezze, hogyan emelhetjük autóápolási élményét új magasságokba!'
				}
			},
			cta: 'Vegye igénybe szolgáltatásainkat'
		},
		en: {
			title: 'Who We Are',
			subtitle: 'With over a decade of unwavering dedication and expertise in the industry, we take pride in offering an unmatched range of services tailored to meet all your automotive requirements under one roof.',
			story: {
				title: 'Experience You Can Trust',
				text: 'With more than 10 years of experience serving our valued customers, we have honed our skills and refined our processes to ensure the highest quality of service and customer satisfaction. Your vehicle deserves nothing but the best, and that\'s precisely what we deliver at Zima Auto Kft.'
			},
			// Repurposed 'mission' section for location
			mission: {
				title: 'Unbeatable Location',
				text: 'Strategically situated just 4.8 kilometers and 5 minutes away from the Budapest Airport, at Vecsés our facility provides unparalleled accessibility and convenience. Say goodbye to the hassle of searching for multiple service providers scattered across the city. With Zima Auto Kft, you can address all your car care needs swiftly and efficiently, saving both time and effort.'
			},
			// Repurposed 'values' section for 'Why Choose Us?'
			values: {
				title: 'Why Choose Us?',
				videoCaption: 'Watch our video to learn more about our services!'
			},
			// New structure for services, pricing, and conclusion - split for grid layout
			offerings: {
				mainTitle: 'Our Offerings: Services, Pricing, and More', // Adjusted main title
				block1: {
					// First grid block content
					title: 'Comprehensive Range of Services',
					text: 'We understand that your vehicle is more than just a mode of transportation; it\'s an investment that deserves the utmost care and attention. That\'s why we offer a comprehensive suite of services, including:',
					listItems: [
						// Simple list for EN
						'Airport Parking',
						'Car Wash',
						'Tyre Repair Service',
						'Car Maintenance Service'
					]
				},
				block2: {
					// Second grid block content
					paymentOptionsTitle: 'Flexible Payment Options',
					paymentOptionsText: 'We understand the importance of convenience, which is why we offer flexible payment options including cash, debit, and credit cards, making your car care experience seamless and hassle-free.',
					pricesTitle: 'Competitive Prices',
					pricesText: 'At Zima Auto Kft, we believe that quality car care should be accessible to everyone. That\'s why we offer the best competitive prices on all our services, ensuring that you get the most value for your money without compromising on quality.',
					conclusion: 'Experience the difference with Zima Auto - where excellence meets convenience, every time.\n\nGet in touch with us today to discover how we can elevate your car care experience to new heights!'
				}
			},
			cta: 'Use our services'
		}
	};

	// Keep existing animation logic and ensure ScrollTrigger is used
	onMount(() => {
		// Animate sections
		gsapWithCSS.from('.about-section', {
			y: 50,
			duration: 0.8,
			stagger: 0.3,
			ease: 'power2.out',
			scrollTrigger: {
				// Use scrollTrigger for sections
				trigger: '.about-section',
				start: 'top 80%', // Adjust trigger point as needed
				
			}, // markers: true // Uncomment for debugging trigger
			
		});

		// Animate the video section
		gsapWithCSS.from('.video-section-wrapper', {
			y: 40,
			opacity: 0,
			duration: 0.8,
			ease: 'power2.out',
			scrollTrigger: {
				trigger: '.values-section',
				start: 'top 70%'
			}
		});

		// Animate the two new content blocks in the offerings section grid
		gsapWithCSS.from('.offerings-section .about-content', {
			y: 50,
			opacity: 0,
			duration: 0.8,
			stagger: 0.3, // Stagger animation between the two blocks
			ease: 'power2.out',
			scrollTrigger: {
				trigger: '.offerings-section', // Trigger when the offerings section comes into view
				start: 'top 80%', // Adjust trigger point
				
			}, // markers: true, // Uncomment for debugging
			
		});

		// Animate the images in the two new grid blocks
		gsapWithCSS.from('.offerings-section .about-image', {
			y: 50,
			opacity: 0,
			duration: 0.8,
			delay: 0.15, // Slightly delay image animation
			stagger: 0.3, // Stagger animation between the two images
			ease: 'power2.out',
			scrollTrigger: {
				trigger: '.offerings-section', // Trigger when the offerings section comes into view
				start: 'top 80%', // Adjust trigger point
				
			}, // markers: true, // Uncomment for debugging
			
		});
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<About> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		onMount,
		currentLang,
		t,
		gsap: gsapWithCSS,
		ScrollTrigger,
		VideoPlayer,
		lang,
		content,
		$currentLang
	});

	$$self.$inject_state = $$props => {
		if ('lang' in $$props) lang = $$props.lang;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [$currentLang, content];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export { About as default };
//# sourceMappingURL=About-571c940e.js.map
